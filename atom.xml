<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>uiste</title>
  <icon>https://www.gravatar.com/avatar/56992660d6f2c687a02a62364e5b9baf</icon>
  <subtitle>uiste</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.uiste.com/"/>
  <updated>2019-11-23T15:09:26.017Z</updated>
  <id>http://blog.uiste.com/</id>
  
  <author>
    <name>uiste</name>
    <email>hi@uiste.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>(三)redis docker 集群</title>
    <link href="http://blog.uiste.com/2019/20191123-1.html"/>
    <id>http://blog.uiste.com/2019/20191123-1.html</id>
    <published>2019-11-23T08:35:26.000Z</published>
    <updated>2019-11-23T15:09:26.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><blockquote><p>当业务场景需要足够大量的Redis存储时，主从结构+哨兵可以实现高可用故障切换+冗余备份，但是并不能解决数据容量的问题，用哨兵Redis每个势力也是全量存储，每个Redis存储的内容都是完整的数据，良妃内存且存在木桶效应。<br>为了最大化利用内存，可以采用cluster集群，就是分布式存储。即每台Redis存储不同的内容。</p></blockquote><p>分布式方案：</p><ol><li>客户端分区方案：优点是分区逻辑可控，缺点是需要自己处理数据路由、高可用、故障转移等问题。在redis2.8之前使用key的hashcode取余分布到不同的节点，一旦节点的增删，都会导致key无法命中。</li><li>代理方案：简化客户端分布式逻辑和升级维护遍历。缺点是加重架构部署复杂度和性能损耗，如：twemproxy,codis</li><li>官方为我们提供了专有的集群方案：redis cluster</li></ol><p>redis集群提供了以下两个好处：</p><ol><li>将数据自动切分到多个节点的能力</li><li>当集群中的一部分节点失效或者无法进行通讯时，仍然可以继续处理名利请求的能力，拥有自动故障转移的能力</li><li>客户端可以与任何一个节点相连接，然后就可以访问集群中的任何一个节点，对其进行存取和其它操作</li></ol><h1 id="redis-cluster-vs-replication-sentinal-如何选择"><a href="#redis-cluster-vs-replication-sentinal-如何选择" class="headerlink" title="redis cluster vs replication + sentinal 如何选择"></a>redis cluster vs replication + sentinal 如何选择</h1><ol><li>如果数据很少，主要是承载高并发高性能的场景，单机即可</li><li>replication：一个master，多个slave，要几个slave跟你要求的读吞吐量有关系，结合sentinal集群，去保证Redis主从架构的高可用性，就可以了</li><li>redis cluster：主要是针对海量数据+高并发+高可用的场景</li></ol><h1 id="分布式是如何进行的"><a href="#分布式是如何进行的" class="headerlink" title="分布式是如何进行的"></a>分布式是如何进行的</h1><p>顺序分区和哈希分区</p><p>数据倾斜 + 数据迁移 + 节点伸缩 </p><blockquote><p>顺序分区：会导致数据倾斜，主要是访问倾斜。每次点击会重点访问某台机器，这就导致最后数据都到这台机器上了。<br>哈希分区：但需要扩容时，专业上称之为”节点伸缩“，这个时候，因为是哈希算法，会导致数据迁移。<br>一致性哈希：加减节点会造成哈希环中部分数据无法命中，需要手动处理或者忽略这部分数据，因此一致性哈希常用于缓存场景。<br>虚拟槽分区：使用CRC16算法，钱庙的使用了哈希空间，使用分散度良好的哈希函数把所有数据映射到一个固定范围的整数集合中，整数定义为槽。redis cluster槽的范围是0~16383，槽是集群内数据管理和迁移的基本单位。采用大范围槽的主要母的是为了方便数据拆分和集群扩展。每个节点会负责一定数量的槽。每当key访问过来，redis cluster会计算哈希值是否在这个区间里。它们彼此都知道对应的槽在哪台机器上，这样就能做到平均分配了。</p></blockquote><p>集群限制</p><blockquote><p>key批量操作，mget()</p></blockquote><h1 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h1><blockquote><p>Docker Compose 是 Docker 官方编排（Orchestration）项目之一，负责快速的部署分布式应<br>用。Compose 允许用户通过一个单独的 docker-compose.yml 模板文件<br>（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。<br>Compose 中有两个重要的概念：</p><ul><li>服务 ( service )：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。</li><li>项目 ( project )：由一组关联的应用容器组成的一个完整业务单元，在 dockercompose.yml 文件中定义。</li></ul></blockquote><h1 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#节点端口</span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line">#开启集群模式</span><br><span class="line">cluster-enabled yes</span><br><span class="line"></span><br><span class="line">#节点超时时间，单位毫秒</span><br><span class="line">cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line">#集群内部配置文件</span><br><span class="line">cluster-config-file ”nodes-6379.conf“</span><br></pre></td></tr></table></figure><h2 id="构建redis-cluster镜像"><a href="#构建redis-cluster镜像" class="headerlink" title="构建redis-cluster镜像"></a>构建redis-cluster镜像</h2><p>文件路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos usr]# tree /usr/docker/</span><br><span class="line">/usr/docker/</span><br><span class="line">└── redis</span><br><span class="line">    ├── config</span><br><span class="line">    │   ├── nodes-6391.conf</span><br><span class="line">    │   ├── nodes-6392.conf</span><br><span class="line">    │   ├── nodes-6393.conf</span><br><span class="line">    │   ├── nodes-6394.conf</span><br><span class="line">    │   ├── nodes-6395.conf</span><br><span class="line">    │   ├── nodes-6396.conf</span><br><span class="line">    │   ├── redis.sh</span><br><span class="line">    │   └── redis-trib.rb</span><br><span class="line">    └── Dockerfile</span><br><span class="line"></span><br><span class="line">2 directories, 9 files</span><br></pre></td></tr></table></figure></p><p>Dockerfile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM centos:latest</span><br><span class="line">RUN groupadd -r redis &amp;&amp; useradd  -r -g redis redis</span><br><span class="line">RUN  yum -y install wget \</span><br><span class="line">&amp;&amp; wget http://mirrors.sohu.com/fedora-epel/epel-release-latest-8.noarch.rpm \</span><br><span class="line">&amp;&amp; rpm -ivh epel-release-latest-8.noarch.rpm \</span><br><span class="line">&amp;&amp; yum clean all &amp;&amp; yum makecache &amp;&amp; yum -y update &amp;&amp;  yum -y install epel-release \</span><br><span class="line">&amp;&amp;   yum -y install redis  &amp;&amp; yum -y install wget \</span><br><span class="line">&amp;&amp;   yum -y install net-tools \</span><br><span class="line">&amp;&amp;   yum -y install  ruby &amp;&amp; yum  -y install  rubygems</span><br><span class="line">RUN wget https://nuoyit.oss-cn-hangzhou.aliyuncs.com/package/redis-3.2.1.gem  &amp;&amp;  gem install -l ./redis-3.2.1.gem \</span><br><span class="line">&amp;&amp;  rm -f redis-3.2.1.gem</span><br><span class="line">COPY  ./config/redis-trib.rb  /usr/bin</span><br><span class="line">COPY  ./config/redis.sh       /usr/bin</span><br><span class="line">RUN  mkdir -p /config  &amp;&amp; chmod  775  /usr/bin/redis.sh</span><br></pre></td></tr></table></figure></p><blockquote><p>dockerfile处理了在腾讯云装epel-release源问题，参考文章：<br><a href="http://www.mamicode.com/info-detail-2297252.html" target="_blank" rel="noopener">CentOS安装epel源详解</a></p></blockquote><p>构建镜像<br><code>docker build -t redis-cluster .</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">redis-cluster       latest              cda424fce4bf        2 minutes ago       391MB</span><br></pre></td></tr></table></figure><h2 id="准备节点"><a href="#准备节点" class="headerlink" title="准备节点"></a>准备节点</h2><p>docker-compose.yml<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">"3.6"</span></span><br><span class="line">services:</span><br><span class="line">  redis-master1:</span><br><span class="line">     image: redis-cluster</span><br><span class="line">     container_name: redis-cluster-master1</span><br><span class="line">     working_dir: /config</span><br><span class="line">     environment:</span><br><span class="line">       - PORT=6391</span><br><span class="line">     ports:</span><br><span class="line">       - <span class="string">"6391:6391"</span></span><br><span class="line">       - <span class="string">"16391:16391"</span></span><br><span class="line">     stdin_open: <span class="literal">true</span></span><br><span class="line">     networks:</span><br><span class="line">        redis-master:</span><br><span class="line">          ipv4_address: 172.50.0.2</span><br><span class="line">     tty: <span class="literal">true</span></span><br><span class="line">     privileged: <span class="literal">true</span></span><br><span class="line">     volumes: [<span class="string">"/usr/docker/redis/config:/config"</span>]</span><br><span class="line">     entrypoint:</span><br><span class="line">       - /bin/bash</span><br><span class="line">       - redis.sh</span><br><span class="line">  redis-master2:</span><br><span class="line">       image: redis-cluster</span><br><span class="line">       working_dir: /config</span><br><span class="line">       container_name: redis-cluster-master2</span><br><span class="line">       environment:</span><br><span class="line">              - PORT=6392</span><br><span class="line">       networks:</span><br><span class="line">          redis-master:</span><br><span class="line">             ipv4_address: 172.50.0.3</span><br><span class="line">       ports:</span><br><span class="line">         - <span class="string">"6392:6392"</span></span><br><span class="line">         - <span class="string">"16392:16392"</span></span><br><span class="line">       stdin_open: <span class="literal">true</span></span><br><span class="line">       tty: <span class="literal">true</span></span><br><span class="line">       privileged: <span class="literal">true</span></span><br><span class="line">       volumes: [<span class="string">"/usr/docker/redis/config:/config"</span>]</span><br><span class="line">       entrypoint:</span><br><span class="line">         - /bin/bash</span><br><span class="line">         - redis.sh</span><br><span class="line">  redis-master3:</span><br><span class="line">       image: redis-cluster</span><br><span class="line">       container_name: redis-cluster-master3</span><br><span class="line">       working_dir: /config</span><br><span class="line">       environment:</span><br><span class="line">              - PORT=6393</span><br><span class="line">       networks:</span><br><span class="line">          redis-master:</span><br><span class="line">            ipv4_address: 172.50.0.4</span><br><span class="line">       ports:</span><br><span class="line">         - <span class="string">"6393:6393"</span></span><br><span class="line">         - <span class="string">"16393:16393"</span></span><br><span class="line">       stdin_open: <span class="literal">true</span></span><br><span class="line">       tty: <span class="literal">true</span></span><br><span class="line">       privileged: <span class="literal">true</span></span><br><span class="line">       volumes: [<span class="string">"/usr/docker/redis/config:/config"</span>]</span><br><span class="line">       entrypoint:</span><br><span class="line">         - /bin/bash</span><br><span class="line">         - redis.sh</span><br><span class="line">  redis-slave1:</span><br><span class="line">       image: redis-cluster</span><br><span class="line">       container_name: redis-cluster-slave1</span><br><span class="line">       working_dir: /config</span><br><span class="line">       environment:</span><br><span class="line">            - PORT=6394</span><br><span class="line">       networks:</span><br><span class="line">          redis-slave:</span><br><span class="line">             ipv4_address: 172.30.0.2</span><br><span class="line">       ports:</span><br><span class="line">         - <span class="string">"6394:6394"</span></span><br><span class="line">         - <span class="string">"16394:16394"</span></span><br><span class="line">       stdin_open: <span class="literal">true</span></span><br><span class="line">       tty: <span class="literal">true</span></span><br><span class="line">       privileged: <span class="literal">true</span></span><br><span class="line">       volumes: [<span class="string">"/usr/docker/redis/config:/config"</span>]</span><br><span class="line">       entrypoint:</span><br><span class="line">         - /bin/bash</span><br><span class="line">         - redis.sh</span><br><span class="line">  redis-salve2:</span><br><span class="line">       image: redis-cluster</span><br><span class="line">       working_dir: /config</span><br><span class="line">       container_name: redis-cluster-salve2</span><br><span class="line">       environment:</span><br><span class="line">             - PORT=6395</span><br><span class="line">       ports:</span><br><span class="line">         - <span class="string">"6395:6395"</span></span><br><span class="line">         - <span class="string">"16395:16395"</span></span><br><span class="line">       stdin_open: <span class="literal">true</span></span><br><span class="line">       networks:</span><br><span class="line">          redis-slave:</span><br><span class="line">              ipv4_address: 172.30.0.3</span><br><span class="line">       tty: <span class="literal">true</span></span><br><span class="line">       privileged: <span class="literal">true</span></span><br><span class="line">       volumes: [<span class="string">"/usr/docker/redis/config:/config"</span>]</span><br><span class="line">       entrypoint:</span><br><span class="line">         - /bin/bash</span><br><span class="line">         - redis.sh</span><br><span class="line">  redis-salve3:</span><br><span class="line">       image: redis-cluster</span><br><span class="line">       container_name: redis-cluster-slave3</span><br><span class="line">       working_dir: /config</span><br><span class="line">       environment:</span><br><span class="line">          - PORT=6396</span><br><span class="line">       ports:</span><br><span class="line">         - <span class="string">"6396:6396"</span></span><br><span class="line">         - <span class="string">"16396:16396"</span></span><br><span class="line">       stdin_open: <span class="literal">true</span></span><br><span class="line">       networks:</span><br><span class="line">          redis-slave:</span><br><span class="line">            ipv4_address: 172.30.0.4</span><br><span class="line">       tty: <span class="literal">true</span></span><br><span class="line">       privileged: <span class="literal">true</span></span><br><span class="line">       volumes: [<span class="string">"/usr/docker/redis/config:/config"</span>]</span><br><span class="line">       entrypoint:</span><br><span class="line">         - /bin/bash</span><br><span class="line">         - redis.sh</span><br><span class="line">networks:</span><br><span class="line">  redis-master:</span><br><span class="line">     driver: bridge</span><br><span class="line">     ipam:</span><br><span class="line">       driver: default</span><br><span class="line">       config:</span><br><span class="line">          -</span><br><span class="line">           subnet: 172.50.0.0/16</span><br><span class="line">  redis-slave:</span><br><span class="line">       driver: bridge</span><br><span class="line">       ipam:</span><br><span class="line">         driver: default</span><br><span class="line">         config:</span><br><span class="line">            -</span><br><span class="line">             subnet: 172.30.0.0/16</span><br><span class="line">  redis-test:</span><br><span class="line">     external:</span><br><span class="line">       name: mynetwork</span><br></pre></td></tr></table></figure></p><p>redis.sh<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server  /config/nodes-<span class="variable">$&#123;PORT&#125;</span>.conf</span><br></pre></td></tr></table></figure></p><p>操作步骤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# docker-compose -p redis-cluster up -d</span><br><span class="line">WARNING: Some networks were defined but are not used by any service: redis-test</span><br><span class="line">Creating redis-cluster-master1 ... done</span><br><span class="line">Creating redis-cluster-salve2  ... done</span><br><span class="line">Creating redis-cluster-master2 ... done</span><br><span class="line">Creating redis-cluster-slave1  ... done</span><br><span class="line">Creating redis-cluster-slave3  ... done</span><br><span class="line">Creating redis-cluster-master3 ... done</span><br><span class="line"></span><br><span class="line">[root@VM_0_6_centos redis]# docker exec -it redis-cluster-master1 bash</span><br><span class="line">[root@7ba6993e9fcf config]# pwd</span><br><span class="line">/config</span><br><span class="line"># 文件已共享</span><br><span class="line">[root@7ba6993e9fcf config]# ls</span><br><span class="line">nodes-6391.conf  nodes-6392.conf  nodes-6393.conf  nodes-6394.conf  nodes-6395.conf  nodes-6396.conf  redis-trib.rb  redis.sh</span><br><span class="line">[root@7ba6993e9fcf config]#</span><br><span class="line"># 查看节点ID</span><br><span class="line">[root@7ba6993e9fcf config]# cat /var/lib/redis/nodes-6379.conf</span><br><span class="line">df23468b9980f0814c35acdc4fb83968c8263d50 :0@0 myself,master - 0 0 0 connected</span><br><span class="line">vars currentEpoch 0 lastVoteEpoch 0</span><br><span class="line">[root@7ba6993e9fcf config]#</span><br><span class="line"></span><br><span class="line"># 登录客户端，参看集群信息</span><br><span class="line">[root@7ba6993e9fcf config]# echo $PORT</span><br><span class="line">6391</span><br><span class="line">[root@7ba6993e9fcf config]# redis-cli -p 6391</span><br><span class="line">127.0.0.1:6391&gt; cluster info</span><br><span class="line">cluster_state:fail</span><br><span class="line">cluster_slots_assigned:0</span><br><span class="line">cluster_slots_ok:0</span><br><span class="line">cluster_slots_pfail:0</span><br><span class="line">cluster_slots_fail:0</span><br><span class="line">cluster_known_nodes:1</span><br><span class="line">cluster_size:0</span><br><span class="line">cluster_current_epoch:0</span><br><span class="line">cluster_my_epoch:0</span><br><span class="line">cluster_stats_messages_sent:0</span><br><span class="line">cluster_stats_messages_received:0</span><br><span class="line">127.0.0.1:6391&gt; cluster nodes</span><br><span class="line">df23468b9980f0814c35acdc4fb83968c8263d50 :6391@16391 myself,master - 0 0 0 connected</span><br></pre></td></tr></table></figure></p><h2 id="节点握手"><a href="#节点握手" class="headerlink" title="节点握手"></a>节点握手</h2><p>节点握手是指一批运行在集群模式下的节点通过Gossip协议彼此通信，到达感知对方的过程。由客户端发起命令：<code>cluster meet {ip} {port}</code></p><p><code>cluster meet 127.0.0.1 6380</code></p><p><strong> 注意 </strong></p><blockquote><ol><li>每个redis cluster节点会占用两个TCP端口，一个监听客户端的请求，默认是6379，另一个在端口上加上10000，比如16379，来监听数据的请求，节点和节点之前会监听第二个端口，用一套二进制协议来通信。<br>节点之间会通过这套协议来进行失败检测，配置更新，failover认证等等。<br>为了保证节点之间的正常访问，需要注意防火墙的配置。</li><li>节点简历握手之后集群还不能正常工作，这时集群处于下线状态，所有的数据读写都被禁止<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6391&gt; set age 18</span><br><span class="line">(error) CLUSTERDOWN Hash slot not served</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li>作为一个完整的集群，需要主从节点，保证当他出现故障时可以自动进行故障转移。集群模式下，redis节点角色分为主节点和从节点。首次启动的节点和被分配槽的节点都是主节点，从节点负责复制主节点槽信息和相关数据</li></ol></blockquote><p>使用 <code>cluster replicate {nodeid}</code> 命令让一个节点称为从节点。其中命令执行必须在对应的从节点上执行，将当前节点设置为node_id指定的节点的从节点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6391&gt; CLUSTER MEET 118.xx.xxx.54 6392</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6391&gt; CLUSTER MEET 118.xx.xxx.54 6393</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6391&gt; CLUSTER MEET 118.xx.xxx.54 6394</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6391&gt; CLUSTER MEET 118.xx.xxx.54 6395</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6391&gt; CLUSTER MEET 118.xx.xxx.54 6396</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6391&gt; CLUSTER NODES</span><br><span class="line">5689df453773f99399a2d93285c6906c0d7f7154 118.xx.xxx.54:6395@16395 master - 0 1574519726000 5 connected</span><br><span class="line">bbba975c724f6ad8c734bcce627f0ae6304f446f 118.xx.xxx.54:6393@16393 master - 0 1574519728000 2 connected</span><br><span class="line">90990230d7a0181a0a07144d9172004a737072f7 118.xx.xxx.54:6396@16396 master - 0 1574519728000 4 connected</span><br><span class="line">6c8fa041a2c71a668b5ab07618c5bec4d1eadad8 118.xx.xxx.54:6392@16392 master - 0 1574519728576 1 connected</span><br><span class="line">b920e563a56577786094bd940536f291b342495c 118.xx.xxx.54:6394@16394 master - 0 1574519729577 3 connected</span><br><span class="line">df23468b9980f0814c35acdc4fb83968c8263d50 118.xx.xxx.54:6391@16391 myself,master - 0 1574519729000 0 connected</span><br></pre></td></tr></table></figure><p>配置主从<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@cd4ac43057f5 config]# redis-cli -h 118.xx.xxx.54 -p 6394 CLUSTER REPLICATE df23468b9980f0814c35acdc4fb83968c8263d50</span><br><span class="line">OK</span><br><span class="line">[root@cd4ac43057f5 config]# redis-cli -h 118.xx.xxx.54 -p 6395 CLUSTER REPLICATE 6c8fa041a2c71a668b5ab07618c5bec4d1eadad8</span><br><span class="line">OK</span><br><span class="line">[root@cd4ac43057f5 config]# redis-cli -h 118.xx.xxx.54 -p 6396 CLUSTER REPLICATE bbba975c724f6ad8c734bcce627f0ae6304f446f</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">[root@cd4ac43057f5 config]# redis-cli -h 118.xx.xxx.54 -p 6391</span><br><span class="line">127.0.0.1:6391&gt; CLUSTER NODES</span><br><span class="line">5689df453773f99399a2d93285c6906c0d7f7154 118.xx.xxx.54:6395@16395 slave 6c8fa041a2c71a668b5ab07618c5bec4d1eadad8 0 1574520112000 5 connected</span><br><span class="line">bbba975c724f6ad8c734bcce627f0ae6304f446f 118.xx.xxx.54:6393@16393 master - 0 1574520111000 2 connected</span><br><span class="line">90990230d7a0181a0a07144d9172004a737072f7 118.xx.xxx.54:6396@16396 slave bbba975c724f6ad8c734bcce627f0ae6304f446f 0 1574520112276 4 connected</span><br><span class="line">6c8fa041a2c71a668b5ab07618c5bec4d1eadad8 118.xx.xxx.54:6392@16392 master - 0 1574520113277 1 connected</span><br><span class="line">b920e563a56577786094bd940536f291b342495c 118.xx.xxx.54:6394@16394 slave df23468b9980f0814c35acdc4fb83968c8263d50 0 1574520111273 3 connected</span><br><span class="line">df23468b9980f0814c35acdc4fb83968c8263d50 118.xx.xxx.54:6391@16391 myself,master - 0 1574520110000 0 connected</span><br></pre></td></tr></table></figure></p><h2 id="分配槽"><a href="#分配槽" class="headerlink" title="分配槽"></a>分配槽</h2><p>redis集群把所有的数据映射到16384个槽中。每个key会映射为一个固定的槽，只有当节点分配了槽，才能响应和这些槽关联的键命令。通过<code>cluster addslots</code>命令为节点分配槽</p><p>利用bash特性批量设置槽（slots）,命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 118.xx.xxx.54 -p 6391 cluster addslots &#123;0..5461&#125;</span><br><span class="line">redis-cli -h 118.xx.xxx.54 -p 6392 cluster addslots &#123;5462..10922&#125;</span><br><span class="line">redis-cli -h 118.xx.xxx.54 -p 6393 cluster addslots &#123;10923..16383&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>我们依照redis协议手动建立一个集群。它由6个节点组成，3个主节点负责处理漕河相关数据，3个从节点负责故障转移。redis官方提供了redis-trib.rb 工具方便我们快速搭建集群</p></blockquote><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@7ba6993e9fcf config]# redis-cli -p 6391</span><br><span class="line">118.xx.xxx.54:6391&gt; set age 18</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">[root@cd4ac43057f5 config]# redis-cli -h 118.xx.xxx.54 -p 6394</span><br><span class="line">118.xx.xxx.54:6394&gt; get age</span><br><span class="line">(error) MOVED 741 118.xx.xxx.54:6391</span><br><span class="line">118.xx.xxx.54:6394&gt; exit</span><br><span class="line">[root@cd4ac43057f5 config]# redis-cli -h 118.xx.xxx.54 -p 6391</span><br><span class="line">118.xx.xxx.54:6391&gt; get age</span><br><span class="line">&quot;18&quot;</span><br></pre></td></tr></table></figure><blockquote><p>操作集群 -c 集群模式 <code>redis-cli -c -p 6391 get age</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@7ba6993e9fcf config]# redis-cli -c -h 118.xx.xxx.54 -p 6391 get age</span><br><span class="line">&quot;18&quot;</span><br><span class="line">[root@7ba6993e9fcf config]# redis-cli -c -h 118.xx.xxx.54 -p 6392 get age</span><br><span class="line">&quot;18&quot;</span><br><span class="line">[root@7ba6993e9fcf config]# redis-cli -c -h 118.xx.xxx.54 -p 6393 get age</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;当业务场景需要足够大量的Redis存储时，主从结构+哨兵可以实现高可用故障切换+冗余备份，但是并不能解决数据容量的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>(二)redis docker 哨兵模式</title>
    <link href="http://blog.uiste.com/2019/20191122-2.html"/>
    <id>http://blog.uiste.com/2019/20191122-2.html</id>
    <published>2019-11-22T08:07:36.000Z</published>
    <updated>2019-11-23T08:17:28.091Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redis主从复制的原理及相关问题"><a href="#Redis主从复制的原理及相关问题" class="headerlink" title="Redis主从复制的原理及相关问题"></a>Redis主从复制的原理及相关问题</h1><ol><li>保存主节点信息</li><li>主从建立socket连接</li><li>发送ping命令</li><li>权限验证</li><li>同步数据集</li><li>命令持续复制</li></ol><h1 id="全量复制"><a href="#全量复制" class="headerlink" title="全量复制"></a>全量复制</h1><h1 id="部分复制"><a href="#部分复制" class="headerlink" title="部分复制"></a>部分复制</h1><p>redis2.8以后才支持</p><h1 id="复制偏移量"><a href="#复制偏移量" class="headerlink" title="复制偏移量"></a>复制偏移量</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">info replication</span><br><span class="line">slave0:ip=172.10.0.3,port=6379,state=online,offset=5545,lag=0</span><br><span class="line">master_repl_offset</span><br></pre></td></tr></table></figure><h1 id="积压缓存区"><a href="#积压缓存区" class="headerlink" title="积压缓存区"></a>积压缓存区</h1><h1 id="dockerfile-指令"><a href="#dockerfile-指令" class="headerlink" title="dockerfile 指令"></a>dockerfile 指令</h1><p>COPY<br>ADD<br>CMD<br>ENTRYPOINT<br>ENV<br>ARG<br>VOLUME<br>EXPOSE<br>WORKDIR<br>USER</p><h1 id="主从复制的常见问题"><a href="#主从复制的常见问题" class="headerlink" title="主从复制的常见问题"></a>主从复制的常见问题</h1><p>repl-disable-tcp-nodelay<br>yes 时 TCP协议会合并小包统一发送，减少主从节点的包数量并节省带宽，会增加数据同步到slave的时间</p><p>slave-priority<br>指定slave的优先级。在不止1个slave的情况下，master宕机时，redis sentinel 会将priority值最小的slave提升为master。需要注意的是，若该配置项为0，则对应的slave永远不会被redis sentinel 自动提升为master</p><h1 id="redis-sentinel-哨兵的作用"><a href="#redis-sentinel-哨兵的作用" class="headerlink" title="redis sentinel 哨兵的作用"></a>redis sentinel 哨兵的作用</h1><ol><li>监控：定期检查Redis数据节点、其余sentinel节点是否可达</li><li>通知：sentinel 节点会将故障转移的结果通知给应用方</li><li>主节点故障转移：实现从节点晋升为主节点并维护后续正确的主从关系</li><li>sentinel节点本身就是独立的Redis节点，只不过她们有一些特殊，自己不存储数据，只支持部分命令</li></ol><h1 id="哨兵配置"><a href="#哨兵配置" class="headerlink" title="哨兵配置"></a>哨兵配置</h1><h2 id="新增一个Redis-slave2"><a href="#新增一个Redis-slave2" class="headerlink" title="新增一个Redis-slave2"></a>新增一个Redis-slave2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos ~]# docker run -itd --name redis-slave2 --net mynetwork -p 6382:6379 --ip 172.10.0.4 redis</span><br><span class="line">d8ceb85aa3bedacad69e0765e5dcac28a4906eeb99c2f22b4e3af2bd3bb29501</span><br><span class="line">[root@VM_0_6_centos ~]# docker exec -it redis-slave2 bash</span><br><span class="line">[root@d8ceb85aa3be /]# vi /etc/redis.conf</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"># JUST COMMENT THE FOLLOWING LINE.</span><br><span class="line"># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">#bind 127.0.0.1</span><br><span class="line">bind 0.0.0.0</span><br><span class="line"># Protected mode is a layer of security protection, in order to avoid that</span><br><span class="line"># Redis instances left open on the internet are accessed and exploited.</span><br><span class="line">#</span><br><span class="line"># When protected mode is on and if:</span><br><span class="line">#</span><br><span class="line"># 1) The server is not binding explicitly to a set of addresses using the</span><br><span class="line">#    &quot;bind&quot; directive.</span><br><span class="line"># 2) No password is configured.</span><br><span class="line">#</span><br><span class="line"># The server only accepts connections from clients connecting from the</span><br><span class="line"># IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain</span><br><span class="line"># sockets.</span><br><span class="line">#</span><br><span class="line"># By default protected mode is enabled. You should disable it only if</span><br><span class="line"># you are sure you want clients from other hosts to connect to Redis</span><br><span class="line"># even if no authentication is configured, nor a specific set of interfaces</span><br><span class="line"># are explicitly listed using the &quot;bind&quot; directive.</span><br><span class="line">#protected-mode yes</span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line">replicaof 172.10.0.2 6379</span><br><span class="line"># If the master is password protected (using the &quot;requirepass&quot; configuration</span><br><span class="line"># directive below) it is possible to tell the replica to authenticate before</span><br><span class="line"># starting the replication synchronization process, otherwise the master will</span><br><span class="line"># refuse the replica request.</span><br><span class="line">#</span><br><span class="line"># masterauth &lt;master-password&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[root@d8ceb85aa3be /]# redis-server /etc/redis.conf &amp;</span><br><span class="line">[1] 29</span><br><span class="line">[root@d8ceb85aa3be /]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:slave</span><br><span class="line">master_host:172.10.0.2</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:3</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:101921</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_replid:73aa73a6ca2674e214b2081989f8f5cd642b1774</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:101921</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:101880</span><br><span class="line">repl_backlog_histlen:42</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h2 id="配置sentinel集群"><a href="#配置sentinel集群" class="headerlink" title="配置sentinel集群"></a>配置sentinel集群</h2><h3 id="核心配置"><a href="#核心配置" class="headerlink" title="核心配置"></a>核心配置</h3><p><code>sentinel monitor mymaster 127.0.0.1 7000 2</code></p><blockquote><p>监控的主节点的名字、IP和端口，最后一个2的意思是有几台 sentinel发现问题，就会发生故障转移，例如 配置为2，代表至少有2个sentinel节点认为主节点不可达，那么这个不可达的判断才是客观的。对于设置的越小，那么达到下线的条件越宽松，反之越严格。一般建议将其设置为sentinel节点的一半加1</p></blockquote><p><code>sentinel  down-after-minllsenconds mymaster 30000</code></p><blockquote><p>这个是超时的时间（单位是毫秒）。当你去ping一个机器的时候，多长时间后仍ping不通，那么就热为它是有问题的</p></blockquote><p><code>sentinel parallel-syncs mymaster 1</code></p><blockquote><p>parallel-syncs就是用来限制在一次故障转移之后，每次向新的主节点发起复制操作的从节点个数，支出sentinel属于并发还是创新，1代表每次只能复制一个，可以减轻master的压力</p></blockquote><p><code>sentinel auth-pass &lt;master-name&gt; &lt;password&gt;</code></p><blockquote><p>如果sentinel监控的主节点配置了密码，sentinel auth-pass配置通过添加主节点的密码，房子sentinel节点对主节点无法监控</p></blockquote><p><code>sentinel failover-timeout mymaster 180000</code></p><blockquote><p>标识故障转移的时间</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name redis-sentinel1 --net mynetwork -p 22530:6379 --ip 172.10.0.30 redis</span><br><span class="line">docker run -itd --name redis-sentinel2 --net mynetwork -p 22531:6379 --ip 172.10.0.31 redis</span><br><span class="line">docker run -itd --name redis-sentinel3 --net mynetwork -p 22532:6379 --ip 172.10.0.32 redis</span><br></pre></td></tr></table></figure><p>操作记录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos ~]# docker run -itd --name redis-sentinel1 --net mynetwork -p 22530:6379 --ip 172.10.0.30 redis</span><br><span class="line">706f81a08f15c74581b5f54a351ac809f3d782e7ee96d4f51b4ff745c8520039</span><br><span class="line">[root@VM_0_6_centos ~]# docker exec -it redis-sentinel1 bash</span><br><span class="line">[root@706f81a08f15 /]# vi /etc/redis-sentinel.conf</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"># bind 127.0.0.1 192.168.1.1</span><br><span class="line">#</span><br><span class="line"># protected-mode no</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line"># port &lt;sentinel-port&gt;</span><br><span class="line"># The port that this sentinel instance will run on</span><br><span class="line">port 26379</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># Note: master name should not include special characters or spaces.</span><br><span class="line"># The valid charset is A-z 0-9 and the three characters &quot;.-_&quot;.</span><br><span class="line">#sentinel monitor mymaster 127.0.0.1 6379 2</span><br><span class="line">sentinel monitor mymaster 172.10.0.2 6379 2</span><br><span class="line"># sentinel auth-pass &lt;master-name&gt; &lt;password&gt;</span><br><span class="line">#</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[root@706f81a08f15 /]# redis-sentinel /etc/redis-sentinel.conf &amp;</span><br></pre></td></tr></table></figure></p><p>配置日志查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@706f81a08f15 /]# vi /var/log/redis/sentinel.log</span><br><span class="line">29:X 23 Nov 2019 04:29:30.667 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">29:X 23 Nov 2019 04:29:30.667 # Redis version=5.0.3, bits=64, commit=00000000, modified=0, pid=29, just started</span><br><span class="line">29:X 23 Nov 2019 04:29:30.667 # Configuration loaded</span><br><span class="line">29:X 23 Nov 2019 04:29:30.670 * Running mode=sentinel, port=26379.</span><br><span class="line">29:X 23 Nov 2019 04:29:30.670 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class="line">29:X 23 Nov 2019 04:29:30.678 # Sentinel ID is 7475415502d8812fb642905c4837a8e071f7a75a</span><br><span class="line">29:X 23 Nov 2019 04:29:30.678 # +monitor master mymaster 172.10.0.2 6379 quorum 2</span><br><span class="line">29:X 23 Nov 2019 04:29:30.766 * +slave slave 172.10.0.3:6379 172.10.0.3 6379 @ mymaster 172.10.0.2 6379</span><br><span class="line">29:X 23 Nov 2019 04:29:30.772 * +slave slave 172.10.0.4:6379 172.10.0.4 6379 @ mymaster 172.10.0.2 6379</span><br><span class="line">29:X 23 Nov 2019 04:29:37.290 * +sentinel sentinel 9e58d80dbc53015c666e1f3c5dba5146ddf56795 172.10.0.31 26379 @ mymaster 172.10.0.2 6379</span><br><span class="line">29:X 23 Nov 2019 04:29:39.245 * +sentinel sentinel acf0b15e88a1734fdc1af5213817c6ac83aadb78 172.10.0.32 26379 @ mymaster 172.10.0.2 6379</span><br></pre></td></tr></table></figure></p><blockquote><p>备注：其它两台的配置一模一样，参数都不需要改变。哨兵集群只需要配置对主节点的监控即可。重启后0.2新的从节点会和新的0.4主节点建立连接</p></blockquote><p><img src="https://res.nuoyit.com/lsprod/loan/95dd8baaf6bf45.png" alt="配置查看"></p><p>登录查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[root@706f81a08f15 /]# redis-cli -p 26379</span><br><span class="line">127.0.0.1:26379&gt; info</span><br><span class="line"># Server</span><br><span class="line">redis_version:5.0.3</span><br><span class="line">redis_git_sha1:00000000</span><br><span class="line">redis_git_dirty:0</span><br><span class="line">redis_build_id:8c0bf22bfba82c8f</span><br><span class="line">redis_mode:sentinel</span><br><span class="line">os:Linux 3.10.0-862.11.6.el7.x86_64 x86_64</span><br><span class="line">arch_bits:64</span><br><span class="line">multiplexing_api:epoll</span><br><span class="line">atomicvar_api:atomic-builtin</span><br><span class="line">gcc_version:8.2.1</span><br><span class="line">process_id:29</span><br><span class="line">run_id:efcfa986c11fb8a4815bba1db1caee13dcb60bae</span><br><span class="line">tcp_port:26379</span><br><span class="line">uptime_in_seconds:4473</span><br><span class="line">uptime_in_days:0</span><br><span class="line">hz:17</span><br><span class="line">configured_hz:10</span><br><span class="line">lru_clock:14206755</span><br><span class="line">executable:/redis-sentinel</span><br><span class="line">config_file:/etc/redis-sentinel.conf</span><br><span class="line"></span><br><span class="line"># Clients</span><br><span class="line">connected_clients:3</span><br><span class="line">client_recent_max_input_buffer:2</span><br><span class="line">client_recent_max_output_buffer:0</span><br><span class="line">blocked_clients:0</span><br><span class="line"></span><br><span class="line"># CPU</span><br><span class="line">used_cpu_sys:8.485302</span><br><span class="line">used_cpu_user:4.427473</span><br><span class="line">used_cpu_sys_children:0.000000</span><br><span class="line">used_cpu_user_children:0.000000</span><br><span class="line"></span><br><span class="line"># Stats</span><br><span class="line">total_connections_received:3</span><br><span class="line">total_commands_processed:12991</span><br><span class="line">instantaneous_ops_per_sec:2</span><br><span class="line">total_net_input_bytes:716377</span><br><span class="line">total_net_output_bytes:77880</span><br><span class="line">instantaneous_input_kbps:0.16</span><br><span class="line">instantaneous_output_kbps:0.01</span><br><span class="line">rejected_connections:0</span><br><span class="line">sync_full:0</span><br><span class="line">sync_partial_ok:0</span><br><span class="line">sync_partial_err:0</span><br><span class="line">expired_keys:0</span><br><span class="line">expired_stale_perc:0.00</span><br><span class="line">expired_time_cap_reached_count:0</span><br><span class="line">evicted_keys:0</span><br><span class="line">keyspace_hits:0</span><br><span class="line">keyspace_misses:0</span><br><span class="line">pubsub_channels:0</span><br><span class="line">pubsub_patterns:0</span><br><span class="line">latest_fork_usec:0</span><br><span class="line">migrate_cached_sockets:0</span><br><span class="line">slave_expires_tracked_keys:0</span><br><span class="line">active_defrag_hits:0</span><br><span class="line">active_defrag_misses:0</span><br><span class="line">active_defrag_key_hits:0</span><br><span class="line">active_defrag_key_misses:0</span><br><span class="line"></span><br><span class="line"># Sentinel</span><br><span class="line">sentinel_masters:1</span><br><span class="line">sentinel_tilt:0</span><br><span class="line">sentinel_running_scripts:0</span><br><span class="line">sentinel_scripts_queue_length:0</span><br><span class="line">sentinel_simulate_failure_flags:0</span><br><span class="line">master0:name=mymaster,status=ok,address=172.10.0.4:6379,slaves=2,sentinels=3</span><br><span class="line">127.0.0.1:26379&gt; sentinel get-master-addr-by-name mymaster</span><br><span class="line">1) &quot;172.10.0.4&quot;</span><br><span class="line">2) &quot;6379&quot;</span><br></pre></td></tr></table></figure></p><h1 id="PHP通过哨兵去任意从库读取数据"><a href="#PHP通过哨兵去任意从库读取数据" class="headerlink" title="PHP通过哨兵去任意从库读取数据"></a>PHP通过哨兵去任意从库读取数据</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: uiste</span></span><br><span class="line"><span class="comment"> * Date: 2019/11/23</span></span><br><span class="line"><span class="comment"> * Time: 下午2:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$sentinelConf = [</span><br><span class="line">[<span class="string">'ip'</span> =&gt; <span class="string">'172.10.0.30'</span>, <span class="string">'port'</span> =&gt; <span class="number">26379</span>],</span><br><span class="line">[<span class="string">'ip'</span> =&gt; <span class="string">'172.10.0.31'</span>, <span class="string">'port'</span> =&gt; <span class="number">26379</span>],</span><br><span class="line">[<span class="string">'ip'</span> =&gt; <span class="string">'172.10.0.32'</span>, <span class="string">'port'</span> =&gt; <span class="number">26379</span>],</span><br><span class="line">];</span><br><span class="line"><span class="comment">//随机访问</span></span><br><span class="line">$sentinelInfo = $sentinelConf[array_rand($sentinelConf)];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$redis = <span class="keyword">new</span> Redis();</span><br><span class="line">$redis-&gt;connect($sentinelInfo[<span class="string">'ip'</span>], $sentinelInfo[<span class="string">'port'</span>]);</span><br><span class="line"></span><br><span class="line">$slavesInfo = $redis-&gt;rawCommand(<span class="string">'SENTINEL'</span>, <span class="string">'slaves'</span>, <span class="string">'mymaster'</span>);</span><br><span class="line">$slaves = [];</span><br><span class="line"><span class="keyword">foreach</span> ($slavesInfo <span class="keyword">as</span> $val) &#123;</span><br><span class="line">$slaves[] = [<span class="string">'ip'</span> =&gt; $val[<span class="number">3</span>], <span class="string">'port'</span> =&gt; $val[<span class="number">5</span>]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment"># 随机从任意从库读取数据</span></span><br><span class="line">$slave = $slaves[array_rand($slaves)];</span><br><span class="line"></span><br><span class="line">$redis = <span class="keyword">new</span> Redis();</span><br><span class="line">$redis-&gt;connect($slave[<span class="string">'ip'</span>], $slave[<span class="string">'port'</span>]);</span><br><span class="line">var_dump($slave, $redis-&gt;get(<span class="string">'name'</span>));</span><br><span class="line"></span><br><span class="line">$count++;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"第&#123;$count&#125;次访问的是：[&#123;$slave['ip']&#125;] : [&#123;$slave['port']&#125;] \r\n"</span>;</span><br><span class="line">sleep(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (\RedisException $e) &#123;</span><br><span class="line"><span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line"><span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>debug info<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos test]# php test.php</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [&quot;ip&quot;]=&gt;</span><br><span class="line">  string(10) &quot;172.10.0.2&quot;</span><br><span class="line">  [&quot;port&quot;]=&gt;</span><br><span class="line">  string(4) &quot;6379&quot;</span><br><span class="line">&#125;</span><br><span class="line">string(5) &quot;uiste&quot;</span><br><span class="line">第1次访问的是：[172.10.0.2] : [6379]</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [&quot;ip&quot;]=&gt;</span><br><span class="line">  string(10) &quot;172.10.0.2&quot;</span><br><span class="line">  [&quot;port&quot;]=&gt;</span><br><span class="line">  string(4) &quot;6379&quot;</span><br><span class="line">&#125;</span><br><span class="line">string(5) &quot;uiste&quot;</span><br><span class="line">第2次访问的是：[172.10.0.2] : [6379]</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [&quot;ip&quot;]=&gt;</span><br><span class="line">  string(10) &quot;172.10.0.3&quot;</span><br><span class="line">  [&quot;port&quot;]=&gt;</span><br><span class="line">  string(4) &quot;6379&quot;</span><br><span class="line">&#125;</span><br><span class="line">string(5) &quot;uiste&quot;</span><br><span class="line">第3次访问的是：[172.10.0.3] : [6379]</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [&quot;ip&quot;]=&gt;</span><br><span class="line">  string(10) &quot;172.10.0.2&quot;</span><br><span class="line">  [&quot;port&quot;]=&gt;</span><br><span class="line">  string(4) &quot;6379&quot;</span><br><span class="line">&#125;</span><br><span class="line">string(5) &quot;uiste&quot;</span><br><span class="line">第4次访问的是：[172.10.0.2] : [6379]</span><br><span class="line"></span><br><span class="line">debug $slavesInfo</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  array(40) &#123;</span><br><span class="line">    [0]=&gt;</span><br><span class="line">    string(4) &quot;name&quot;</span><br><span class="line">    [1]=&gt;</span><br><span class="line">    string(15) &quot;172.10.0.2:6379&quot;</span><br><span class="line">    [2]=&gt;</span><br><span class="line">    string(2) &quot;ip&quot;</span><br><span class="line">    [3]=&gt;</span><br><span class="line">    string(10) &quot;172.10.0.2&quot;</span><br><span class="line">    [4]=&gt;</span><br><span class="line">    string(4) &quot;port&quot;</span><br><span class="line">    [5]=&gt;</span><br><span class="line">    string(4) &quot;6379&quot;</span><br><span class="line">    [6]=&gt;</span><br><span class="line">    string(5) &quot;runid&quot;</span><br><span class="line">    [7]=&gt;</span><br><span class="line">    string(40) &quot;0e681802737476f1432e1bd21fa85b15d008892a&quot;</span><br><span class="line">    [8]=&gt;</span><br><span class="line">    string(5) &quot;flags&quot;</span><br><span class="line">    [9]=&gt;</span><br><span class="line">    string(5) &quot;slave&quot;</span><br><span class="line">    [10]=&gt;</span><br><span class="line">    string(21) &quot;link-pending-commands&quot;</span><br><span class="line">    [11]=&gt;</span><br><span class="line">    string(1) &quot;0&quot;</span><br><span class="line">    [12]=&gt;</span><br><span class="line">    string(13) &quot;link-refcount&quot;</span><br><span class="line">    [13]=&gt;</span><br><span class="line">    string(1) &quot;1&quot;</span><br><span class="line">    [14]=&gt;</span><br><span class="line">    string(14) &quot;last-ping-sent&quot;</span><br><span class="line">    [15]=&gt;</span><br><span class="line">    string(1) &quot;0&quot;</span><br><span class="line">    [16]=&gt;</span><br><span class="line">    string(18) &quot;last-ok-ping-reply&quot;</span><br><span class="line">    [17]=&gt;</span><br><span class="line">    string(3) &quot;490&quot;</span><br><span class="line">    [18]=&gt;</span><br><span class="line">    string(15) &quot;last-ping-reply&quot;</span><br><span class="line">    [19]=&gt;</span><br><span class="line">    string(3) &quot;490&quot;</span><br><span class="line">    [20]=&gt;</span><br><span class="line">    string(23) &quot;down-after-milliseconds&quot;</span><br><span class="line">    [21]=&gt;</span><br><span class="line">    string(5) &quot;30000&quot;</span><br><span class="line">    [22]=&gt;</span><br><span class="line">    string(12) &quot;info-refresh&quot;</span><br><span class="line">    [23]=&gt;</span><br><span class="line">    string(4) &quot;5825&quot;</span><br><span class="line">    [24]=&gt;</span><br><span class="line">    string(13) &quot;role-reported&quot;</span><br><span class="line">    [25]=&gt;</span><br><span class="line">    string(5) &quot;slave&quot;</span><br><span class="line">    [26]=&gt;</span><br><span class="line">    string(18) &quot;role-reported-time&quot;</span><br><span class="line">    [27]=&gt;</span><br><span class="line">    string(7) &quot;9292293&quot;</span><br><span class="line">    [28]=&gt;</span><br><span class="line">    string(21) &quot;master-link-down-time&quot;</span><br><span class="line">    [29]=&gt;</span><br><span class="line">    string(1) &quot;0&quot;</span><br><span class="line">    [30]=&gt;</span><br><span class="line">    string(18) &quot;master-link-status&quot;</span><br><span class="line">    [31]=&gt;</span><br><span class="line">    string(2) &quot;ok&quot;</span><br><span class="line">    [32]=&gt;</span><br><span class="line">    string(11) &quot;master-host&quot;</span><br><span class="line">    [33]=&gt;</span><br><span class="line">    string(10) &quot;172.10.0.4&quot;</span><br><span class="line">    [34]=&gt;</span><br><span class="line">    string(11) &quot;master-port&quot;</span><br><span class="line">    [35]=&gt;</span><br><span class="line">    string(4) &quot;6379&quot;</span><br><span class="line">    [36]=&gt;</span><br><span class="line">    string(14) &quot;slave-priority&quot;</span><br><span class="line">    [37]=&gt;</span><br><span class="line">    string(3) &quot;100&quot;</span><br><span class="line">    [38]=&gt;</span><br><span class="line">    string(17) &quot;slave-repl-offset&quot;</span><br><span class="line">    [39]=&gt;</span><br><span class="line">    string(7) &quot;2791574&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  array(40) &#123;</span><br><span class="line">    [0]=&gt;</span><br><span class="line">    string(4) &quot;name&quot;</span><br><span class="line">    [1]=&gt;</span><br><span class="line">    string(15) &quot;172.10.0.3:6379&quot;</span><br><span class="line">    [2]=&gt;</span><br><span class="line">    string(2) &quot;ip&quot;</span><br><span class="line">    [3]=&gt;</span><br><span class="line">    string(10) &quot;172.10.0.3&quot;</span><br><span class="line">    [4]=&gt;</span><br><span class="line">    string(4) &quot;port&quot;</span><br><span class="line">    [5]=&gt;</span><br><span class="line">    string(4) &quot;6379&quot;</span><br><span class="line">    [6]=&gt;</span><br><span class="line">    string(5) &quot;runid&quot;</span><br><span class="line">    [7]=&gt;</span><br><span class="line">    string(40) &quot;74c3a5ad5201ec08b04c34a6c1e8be43e3454f2f&quot;</span><br><span class="line">    [8]=&gt;</span><br><span class="line">    string(5) &quot;flags&quot;</span><br><span class="line">    [9]=&gt;</span><br><span class="line">    string(5) &quot;slave&quot;</span><br><span class="line">    [10]=&gt;</span><br><span class="line">    string(21) &quot;link-pending-commands&quot;</span><br><span class="line">    [11]=&gt;</span><br><span class="line">    string(1) &quot;0&quot;</span><br><span class="line">    [12]=&gt;</span><br><span class="line">    string(13) &quot;link-refcount&quot;</span><br><span class="line">    [13]=&gt;</span><br><span class="line">    string(1) &quot;1&quot;</span><br><span class="line">    [14]=&gt;</span><br><span class="line">    string(14) &quot;last-ping-sent&quot;</span><br><span class="line">    [15]=&gt;</span><br><span class="line">    string(1) &quot;0&quot;</span><br><span class="line">    [16]=&gt;</span><br><span class="line">    string(18) &quot;last-ok-ping-reply&quot;</span><br><span class="line">    [17]=&gt;</span><br><span class="line">    string(3) &quot;490&quot;</span><br><span class="line">    [18]=&gt;</span><br><span class="line">    string(15) &quot;last-ping-reply&quot;</span><br><span class="line">    [19]=&gt;</span><br><span class="line">    string(3) &quot;490&quot;</span><br><span class="line">    [20]=&gt;</span><br><span class="line">    string(23) &quot;down-after-milliseconds&quot;</span><br><span class="line">    [21]=&gt;</span><br><span class="line">    string(5) &quot;30000&quot;</span><br><span class="line">    [22]=&gt;</span><br><span class="line">    string(12) &quot;info-refresh&quot;</span><br><span class="line">    [23]=&gt;</span><br><span class="line">    string(4) &quot;2184&quot;</span><br><span class="line">    [24]=&gt;</span><br><span class="line">    string(13) &quot;role-reported&quot;</span><br><span class="line">    [25]=&gt;</span><br><span class="line">    string(5) &quot;slave&quot;</span><br><span class="line">    [26]=&gt;</span><br><span class="line">    string(18) &quot;role-reported-time&quot;</span><br><span class="line">    [27]=&gt;</span><br><span class="line">    string(8) &quot;13031310&quot;</span><br><span class="line">    [28]=&gt;</span><br><span class="line">    string(21) &quot;master-link-down-time&quot;</span><br><span class="line">    [29]=&gt;</span><br><span class="line">    string(1) &quot;0&quot;</span><br><span class="line">    [30]=&gt;</span><br><span class="line">    string(18) &quot;master-link-status&quot;</span><br><span class="line">    [31]=&gt;</span><br><span class="line">    string(2) &quot;ok&quot;</span><br><span class="line">    [32]=&gt;</span><br><span class="line">    string(11) &quot;master-host&quot;</span><br><span class="line">    [33]=&gt;</span><br><span class="line">    string(10) &quot;172.10.0.4&quot;</span><br><span class="line">    [34]=&gt;</span><br><span class="line">    string(11) &quot;master-port&quot;</span><br><span class="line">    [35]=&gt;</span><br><span class="line">    string(4) &quot;6379&quot;</span><br><span class="line">    [36]=&gt;</span><br><span class="line">    string(14) &quot;slave-priority&quot;</span><br><span class="line">    [37]=&gt;</span><br><span class="line">    string(3) &quot;100&quot;</span><br><span class="line">    [38]=&gt;</span><br><span class="line">    string(17) &quot;slave-repl-offset&quot;</span><br><span class="line">    [39]=&gt;</span><br><span class="line">    string(7) &quot;2792254&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Redis主从复制的原理及相关问题&quot;&gt;&lt;a href=&quot;#Redis主从复制的原理及相关问题&quot; class=&quot;headerlink&quot; title=&quot;Redis主从复制的原理及相关问题&quot;&gt;&lt;/a&gt;Redis主从复制的原理及相关问题&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;保存主节
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>(一)redis docker 主从配置</title>
    <link href="http://blog.uiste.com/2019/20191122-1.html"/>
    <id>http://blog.uiste.com/2019/20191122-1.html</id>
    <published>2019-11-22T06:01:58.000Z</published>
    <updated>2019-11-23T03:55:09.145Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境相关"><a href="#环境相关" class="headerlink" title="环境相关"></a>环境相关</h1><h2 id="docker-安装参考"><a href="#docker-安装参考" class="headerlink" title="docker 安装参考"></a>docker 安装参考</h2><p>参考: <a href="https://yeasy.gitbooks.io/docker_practice/install/" target="_blank" rel="noopener">Docker 安装</a></p><h2 id="docker-lnmp-集成环境"><a href="#docker-lnmp-集成环境" class="headerlink" title="docker-lnmp 集成环境"></a>docker-lnmp 集成环境</h2><p>参考：<a href="https://github.com/uiste/docker-lnmp" target="_blank" rel="noopener">Docker-lnmp</a></p><h1 id="Redis-主从配置"><a href="#Redis-主从配置" class="headerlink" title="Redis 主从配置"></a>Redis 主从配置</h1><h2 id="指定自定义网络"><a href="#指定自定义网络" class="headerlink" title="指定自定义网络"></a>指定自定义网络</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# pwd</span><br><span class="line">/data/web/redis</span><br><span class="line"></span><br><span class="line">[root@VM_0_6_centos redis]# docker network create --subnet=172.10.0.0/16 mynetwork</span><br><span class="line">1e74de7cbd62306d0f1785e83ef5426cafb021cccd6e1bdfaa316cd7017911d9</span><br></pre></td></tr></table></figure><h2 id="创建-Dockerfile"><a href="#创建-Dockerfile" class="headerlink" title="创建 Dockerfile"></a>创建 Dockerfile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM centos:latest</span><br><span class="line">RUN groupadd -r redis &amp;&amp; useradd  -r -g redis redis</span><br><span class="line">RUN yum -y update &amp;&amp;  yum -y install epel-release &amp;&amp; yum -y install redis &amp;&amp; yum -y install net-tools</span><br><span class="line">EXPOSE 6379</span><br></pre></td></tr></table></figure><h2 id="在-Dockerfile-目录-执行下面的代码，注意后面上下文点号"><a href="#在-Dockerfile-目录-执行下面的代码，注意后面上下文点号" class="headerlink" title="在 Dockerfile 目录 执行下面的代码，注意后面上下文点号"></a>在 Dockerfile 目录 执行下面的代码，注意后面上下文点号</h2><p><code>docker build -t redis .</code></p><h2 id="使用此docker-镜像-创建容器"><a href="#使用此docker-镜像-创建容器" class="headerlink" title="使用此docker 镜像 创建容器"></a>使用此docker 镜像 创建容器</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name redis-master --net mynetwork -p 6380:6379 --ip 172.10.0.2 redis</span><br><span class="line">docker run -itd --name redis-slave --net mynetwork -p 6381:6379 --ip 172.10.0.3 redis</span><br><span class="line">docker run -itd --name redis-slave2 --net mynetwork -p 6382:6379 --ip 172.10.0.4 redis</span><br></pre></td></tr></table></figure></p><p>参数说明：<br>参考: <a href="https://www.runoob.com/docker/docker-command-manual.html" target="_blank" rel="noopener">菜鸟教程文档</a></p><h3 id="查看网络"><a href="#查看网络" class="headerlink" title="查看网络"></a>查看网络</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# docker network inspect mynetwork</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Name&quot;: &quot;mynetwork&quot;,</span><br><span class="line">        &quot;Id&quot;: &quot;1e74de7cbd62306d0f1785e83ef5426cafb021cccd6e1bdfaa316cd7017911d9&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2019-11-22T14:01:10.470838603+08:00&quot;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;bridge&quot;,</span><br><span class="line">        &quot;EnableIPv6&quot;: false,</span><br><span class="line">        &quot;IPAM&quot;: &#123;</span><br><span class="line">            &quot;Driver&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">            &quot;Config&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;Subnet&quot;: &quot;172.10.0.0/16&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Internal&quot;: false,</span><br><span class="line">        &quot;Attachable&quot;: false,</span><br><span class="line">        &quot;Ingress&quot;: false,</span><br><span class="line">        &quot;ConfigFrom&quot;: &#123;</span><br><span class="line">            &quot;Network&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ConfigOnly&quot;: false,</span><br><span class="line">        &quot;Containers&quot;: &#123;</span><br><span class="line">            &quot;3391a5251e6324274a6f431b0346fabb9010cbcc0fe156c988ffb6bd20148a72&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;redis-master&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;6e6505d09e0b2a58d80a8b3e306f506dd2da8a7c77f345a051d05cce4618a6a4&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:ac:0a:00:02&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;172.10.0.2/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;ff01a57b5de5d54a387d5945fe8b7d5d12b2cf3476b6f93ed6dc4a0f82fa0aef&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;redis-slave&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;5a5d3ea726d9b7b9fc7555138e209ad3ec04fa758713c210c1cd8269806f2b05&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:ac:0a:00:03&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;172.10.0.3/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# docker exec -it ff01a57b5de5 /bin/bash</span><br><span class="line">[root@ff01a57b5de5 /]#</span><br></pre></td></tr></table></figure><h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><h3 id="主从复制说明"><a href="#主从复制说明" class="headerlink" title="主从复制说明"></a>主从复制说明</h3><p>为了解决单一节点 机器故障、容量瓶颈等问题，会把数据复制多个副本部署到其它节点上进行冗余备份。实现Redis的高可用。</p><blockquote><p>主从复制-&gt;哨兵-&gt;集群</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>redis服务器启动后，直接通过客户端执行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slaveof &lt;masterip&gt; &lt;masterport&gt; 则该redis实例成为从节点</span><br><span class="line"></span><br><span class="line">slaveof no one 断开连接</span><br></pre></td></tr></table></figure></p><p>修改redis保护模式 配置从节点依赖的主节点IP</p><p>主节点调整<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# docker exec -it redis-master /bin/bash</span><br><span class="line">[root@ff01a57b5de5 /]# vi /etc/redis.conf</span><br><span class="line">...</span><br><span class="line"># JUST COMMENT THE FOLLOWING LINE.</span><br><span class="line"># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">#bind 127.0.0.1</span><br><span class="line">bind 0.0.0.0</span><br><span class="line"># Protected mode is a layer of security protection, in order to avoid that</span><br><span class="line"># Redis instances left open on the internet are accessed and exploited.</span><br><span class="line">#</span><br><span class="line"># When protected mode is on and if:</span><br><span class="line">#</span><br><span class="line"># 1) The server is not binding explicitly to a set of addresses using the</span><br><span class="line">#    &quot;bind&quot; directive.</span><br><span class="line"># 2) No password is configured.</span><br><span class="line">#</span><br><span class="line"># The server only accepts connections from clients connecting from the</span><br><span class="line"># IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain</span><br><span class="line"># sockets.</span><br><span class="line">#</span><br><span class="line"># By default protected mode is enabled. You should disable it only if</span><br><span class="line"># you are sure you want clients from other hosts to connect to Redis</span><br><span class="line"># even if no authentication is configured, nor a specific set of interfaces</span><br><span class="line"># are explicitly listed using the &quot;bind&quot; directive.</span><br><span class="line">#protected-mode yes</span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>从节点调整<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# docker exec -it redis-slave /bin/bash</span><br><span class="line">[root@ff01a57b5de5 /]# vi /etc/redis.conf</span><br><span class="line">...</span><br><span class="line"># JUST COMMENT THE FOLLOWING LINE.</span><br><span class="line"># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">#bind 127.0.0.1</span><br><span class="line">bind 0.0.0.0</span><br><span class="line"># Protected mode is a layer of security protection, in order to avoid that</span><br><span class="line"># Redis instances left open on the internet are accessed and exploited.</span><br><span class="line">#</span><br><span class="line"># When protected mode is on and if:</span><br><span class="line">#</span><br><span class="line"># 1) The server is not binding explicitly to a set of addresses using the</span><br><span class="line">#    &quot;bind&quot; directive.</span><br><span class="line"># 2) No password is configured.</span><br><span class="line">#</span><br><span class="line"># The server only accepts connections from clients connecting from the</span><br><span class="line"># IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain</span><br><span class="line"># sockets.</span><br><span class="line">#</span><br><span class="line"># By default protected mode is enabled. You should disable it only if</span><br><span class="line"># you are sure you want clients from other hosts to connect to Redis</span><br><span class="line"># even if no authentication is configured, nor a specific set of interfaces</span><br><span class="line"># are explicitly listed using the &quot;bind&quot; directive.</span><br><span class="line">#protected-mode yes</span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line">replicaof 172.10.0.2 6379</span><br><span class="line"># If the master is password protected (using the &quot;requirepass&quot; configuration</span><br><span class="line"># directive below) it is possible to tell the replica to authenticate before</span><br><span class="line"># starting the replication synchronization process, otherwise the master will</span><br><span class="line"># refuse the replica request.</span><br><span class="line">#</span><br><span class="line"># masterauth &lt;master-password&gt;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><h3 id="数据测试"><a href="#数据测试" class="headerlink" title="数据测试"></a>数据测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_6_centos redis]# docker exec -it redis-master /bin/bash</span><br><span class="line">[root@3391a5251e63 /]# vi /etc/redis.conf</span><br><span class="line">[root@3391a5251e63 /]# redis-server /etc/redis.conf &amp;</span><br><span class="line">[1] 28</span><br><span class="line">[root@3391a5251e63 /]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; set name uiste</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;uiste&quot;</span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=172.10.0.3,port=6379,state=online,offset=5545,lag=0</span><br><span class="line">master_replid:73aa73a6ca2674e214b2081989f8f5cd642b1774</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:5545</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1</span><br><span class="line">repl_backlog_histlen:5545</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@VM_0_6_centos ~]# docker exec -it redis-slave /bin/bash</span><br><span class="line">[root@ff01a57b5de5 /]# redis-server /etc/redis.conf &amp;</span><br><span class="line">[1] 73</span><br><span class="line">[root@ff01a57b5de5 /]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;uiste&quot;</span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:slave</span><br><span class="line">master_host:172.10.0.2</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:3</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:5503</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_replid:73aa73a6ca2674e214b2081989f8f5cd642b1774</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:5503</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1</span><br><span class="line">repl_backlog_histlen:5503</span><br></pre></td></tr></table></figure><blockquote><p>多个从节点的时候，避免主节点同步压力的增加，可以将其它从节点依赖于从节点同步</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境相关&quot;&gt;&lt;a href=&quot;#环境相关&quot; class=&quot;headerlink&quot; title=&quot;环境相关&quot;&gt;&lt;/a&gt;环境相关&lt;/h1&gt;&lt;h2 id=&quot;docker-安装参考&quot;&gt;&lt;a href=&quot;#docker-安装参考&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git commit 提交的时候报错</title>
    <link href="http://blog.uiste.com/2019/20190830-1.html"/>
    <id>http://blog.uiste.com/2019/20190830-1.html</id>
    <published>2019-08-30T05:53:36.000Z</published>
    <updated>2019-11-22T08:05:06.072Z</updated>
    
    <content type="html"><![CDATA[<p>git commit 提交的时候报错husky &gt; pre-commit</p><p>这个问题是因为当你在终端输入git commit -m “XXX”,提交代码的时候,pre-commit(客户端)钩子，它会在Git键入提交信息前运行做代码风格检查。如果代码不符合相应规则，则报错，而它的检测规则就是根据.git/hooks/pre-commit文件里面的相关定义。查询了网上的解决办法，总结为以下三种解决方案，个人喜欢第三种：</p><blockquote><p>卸载husky。只要把项目的package.json文件中devDependencies节点下的husky库删掉，然后重新npm i 一次即可。或者直接在项目根目录下执行npm uninstall husky –save也可以，再次提交，自动化测试功能就屏蔽掉</p></blockquote><blockquote><p>进入项目的.git文件夹(文件夹默认隐藏,可先设置显示或者命令ls查找),再进入hooks文件夹,删除pre-commit文件,重新git commit -m ‘xxx’ git push即可。</p></blockquote><blockquote><p>将git commit -m “XXX” 改为 git commit –no-verify -m “XXX”</p></blockquote><p>注册页<br><a href="https://res.mimeicy.cn/lsprod/loan/35d217e7b39284.png" target="_blank" rel="noopener">https://res.mimeicy.cn/lsprod/loan/35d217e7b39284.png</a></p><p>IOS<br><a href="https://res.mimeicy.cn/lsprod/loan/75d217e4503fb4.png" target="_blank" rel="noopener">https://res.mimeicy.cn/lsprod/loan/75d217e4503fb4.png</a></p><p>安卓<br><a href="https://res.mimeicy.cn/lsprod/loan/85d217e6a2a086.png" target="_blank" rel="noopener">https://res.mimeicy.cn/lsprod/loan/85d217e6a2a086.png</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;git commit 提交的时候报错husky &amp;gt; pre-commit&lt;/p&gt;
&lt;p&gt;这个问题是因为当你在终端输入git commit -m “XXX”,提交代码的时候,pre-commit(客户端)钩子，它会在Git键入提交信息前运行做代码风格检查。如果代码不符合
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>shell</title>
    <link href="http://blog.uiste.com/2019/20190822-2.html"/>
    <id>http://blog.uiste.com/2019/20190822-2.html</id>
    <published>2019-08-22T08:06:14.000Z</published>
    <updated>2019-11-22T08:10:53.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="续"><a href="#续" class="headerlink" title="续"></a>续</h1><ol><li>基本监控系统脚本（CPU，内存，IO等）</li><li>后台服务监控、启动、停止脚本、数据备份脚本</li><li>利用grep、sed和awk的复杂用法处理文本</li><li>功能函数编写、主流程设计</li><li>具备复杂功能的大型脚本工具编写</li></ol><h1 id="变量替换"><a href="#变量替换" class="headerlink" title="变量替换"></a>变量替换</h1><table><thead><tr><th style="text-align:left">语法</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">${变量名#匹配规则}</td><td style="text-align:left">从变量开头进行规则匹配，将符合最短的数据删除</td></tr><tr><td style="text-align:left">${变量名##匹配规则}</td><td style="text-align:left">从变量开头进行规则匹配，将符合最长的数据删除</td></tr><tr><td style="text-align:left">${变量名%匹配规则}</td><td style="text-align:left">从变量尾部进行规则匹配，将符合最短的数据删除</td></tr><tr><td style="text-align:left">${变量名%%匹配规则}</td><td style="text-align:left">从变量尾部进行规则匹配，将符合最长的数据删除</td></tr><tr><td style="text-align:left">${变量名/匹配规则}</td><td style="text-align:left">变量内容符合旧字符串，则第一个旧字符串会被新字符串取代</td></tr><tr><td style="text-align:left">${变量名//匹配规则}</td><td style="text-align:left">变量内容符合旧字符串，则全部旧字符串会被新字符串取代</td></tr></tbody></table><h1 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h1><h2 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法一：$&#123;#string&#125;</span><br><span class="line">方法二：expr length $string</span><br></pre></td></tr></table></figure><h2 id="获取字符索引位置"><a href="#获取字符索引位置" class="headerlink" title="获取字符索引位置"></a>获取字符索引位置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法：expr index &quot;$string&quot; substr</span><br></pre></td></tr></table></figure><h2 id="获取子串长度"><a href="#获取子串长度" class="headerlink" title="获取子串长度"></a>获取子串长度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法：expr match &quot;$string&quot; substr</span><br></pre></td></tr></table></figure><h2 id="抽取字符串中的子串"><a href="#抽取字符串中的子串" class="headerlink" title="抽取字符串中的子串"></a>抽取字符串中的子串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">方法一：</span><br><span class="line"></span><br><span class="line">1. $&#123;string:position&#125;</span><br><span class="line">2. $&#123;string:position:length&#125;</span><br><span class="line">3. $&#123;string: -postion&#125; 或者 $&#123;string:(position)&#125;</span><br><span class="line"></span><br><span class="line">方法二：</span><br><span class="line">`expr substr $string $position $length`</span><br><span class="line"></span><br><span class="line">&gt;使用expr，索引计数从1开始计算；使用`$&#123;string:positon:length&#125;`，索引计数从0开始</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">string=<span class="string">"Bigdata process framework is Hadoop,Hadoop is an open source project"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> print_tips</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"*********************************"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"(1) 打印string长度"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"(2) 删除字符串中所有的Hadoop"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"(3) 替换第一个Hadoop为Mapreduce"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"(4) 替换全部的Hadoop为Mapreduce"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"*********************************"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> len_of_string</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;#string&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> del_hadoop</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;string//Hadoop/&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> rep_hadoop_mapreduce_first</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;string/Hadoop/Mapreduce&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> rep_hadoop_mapreduce_all</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;string//Hadoop/Mapreduce&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"【string=<span class="variable">$string</span>]"</span></span><br><span class="line">print_tips</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input your choice(1|2|3|4|q|Q): "</span> choice</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$choice</span> <span class="keyword">in</span> </span><br><span class="line">1)</span><br><span class="line">len_of_string</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">del_hadoop</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">rep_hadoop_mapreduce_first</span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">rep_hadoop_mapreduce_all</span><br><span class="line">;;</span><br><span class="line">q|Q)</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Error, Input only in (1|2|3|4|q|Q)"</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h1><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>方法一：<code>command</code><br>方法二：<code>$(command)</code></p><ul><li><p>例子1：<br>获取系统的所有用户并输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">index=1</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> `cat /etc/passwd | cut -d <span class="string">":"</span> -f 1`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This is <span class="variable">$index</span> user : <span class="variable">$user</span>"</span></span><br><span class="line">index=$((<span class="variable">$index</span>+1))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>例子2：<br>根据系统时间计算今年或明年</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;This is $(date +%Y) year&quot;</span><br><span class="line">echo &quot;This is $(($(date +%Y) + 1)) year &quot;</span><br></pre></td></tr></table></figure></li><li><p>例子3：<br>根据系统时间获取今年还剩下多少星期，已经过了多少星期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;This year have passed $(date +%j) days&quot;</span><br><span class="line">echo &quot;This year have passed $(($(date +%j)/7)) weeks&quot;</span><br></pre></td></tr></table></figure></li><li><p>例子4：<br>判定nginx进程是否存在，若不存在则自动拉起该进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">nginx_process_num=$(ps -ef | grep nginx | grep -v grep | wc -l)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$nginx_process_num</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="comment">#systemctl start nginx</span></span><br><span class="line">brew services start nginx</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>`` 和 $() 两者是等价的，但推荐使用 $() ，易于掌握；缺点是极少数Unix可能不支持<br>$(()) 主要用来进行整数运算，包括加减乘除，引用变量前面可以加$，也可以不加$</p></blockquote><h1 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h1><h2 id="声明变量类型为只读类型"><a href="#声明变量类型为只读类型" class="headerlink" title="声明变量类型为只读类型"></a>声明变量类型为只读类型</h2><p><code>declare -r var=&quot;hello&quot;</code></p><h2 id="声明变量类型为整形"><a href="#声明变量类型为整形" class="headerlink" title="声明变量类型为整形"></a>声明变量类型为整形</h2><p><code>declare -i</code></p><h2 id="在脚本中显示定义的函数和内容"><a href="#在脚本中显示定义的函数和内容" class="headerlink" title="在脚本中显示定义的函数和内容"></a>在脚本中显示定义的函数和内容</h2><p><code>declare -f</code></p><h2 id="在脚本中显示定义的函数"><a href="#在脚本中显示定义的函数" class="headerlink" title="在脚本中显示定义的函数"></a>在脚本中显示定义的函数</h2><p><code>declare -F</code></p><h2 id="声明数组"><a href="#声明数组" class="headerlink" title="声明数组"></a>声明数组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> -a array</span><br><span class="line">array=(<span class="string">"jones"</span> <span class="string">"mike"</span> <span class="string">"kobe"</span> <span class="string">'jordan'</span>)</span><br><span class="line"></span><br><span class="line">输出数组内容：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]&#125;</span> 输出全部内容</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[1]&#125;</span> 输出下标索引为1的内容</span><br><span class="line"></span><br><span class="line">获取数组长度</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[@]&#125;</span> 输出数组内元素的个数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[2]&#125;</span> 输出数组下标索引为2的元素的长度</span><br><span class="line"></span><br><span class="line">给数组某个下标赋值</span><br><span class="line">array[0] = <span class="string">'lily'</span></span><br><span class="line"></span><br><span class="line">删除元素</span><br><span class="line"><span class="built_in">unset</span> array[2] 清空元素</span><br></pre></td></tr></table></figure><h1 id="数学运算之expr"><a href="#数学运算之expr" class="headerlink" title="数学运算之expr"></a>数学运算之expr</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">|</span><br><span class="line">&amp;</span><br><span class="line">&gt;</span><br><span class="line">&gt;=</span><br><span class="line">&lt;</span><br><span class="line">&lt;=</span><br><span class="line">=</span><br><span class="line">!=</span><br><span class="line">+</span><br><span class="line">-</span><br><span class="line">*</span><br><span class="line">/</span><br><span class="line">%</span><br></pre></td></tr></table></figure><h1 id="Nginx-监控脚本"><a href="#Nginx-监控脚本" class="headerlink" title="Nginx 监控脚本"></a>Nginx 监控脚本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">this_pid=$$</span><br><span class="line">status=`ps -ef | grep nginx | grep -v nginx | grep -v <span class="variable">$this_pid</span> &amp;&gt; /dev/null`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$status</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Nginx is running well"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">systemctl start nginx</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Nginx is down, Start it ..."</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;续&quot;&gt;&lt;a href=&quot;#续&quot; class=&quot;headerlink&quot; title=&quot;续&quot;&gt;&lt;/a&gt;续&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;基本监控系统脚本（CPU，内存，IO等）&lt;/li&gt;
&lt;li&gt;后台服务监控、启动、停止脚本、数据备份脚本&lt;/li&gt;
&lt;li&gt;利用grep、
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>nginx 优化</title>
    <link href="http://blog.uiste.com/2019/20190801-1.html"/>
    <id>http://blog.uiste.com/2019/20190801-1.html</id>
    <published>2019-08-01T08:44:44.000Z</published>
    <updated>2019-11-22T08:03:37.050Z</updated>
    
    <content type="html"><![CDATA[<h2 id="默认安装"><a href="#默认安装" class="headerlink" title="默认安装"></a>默认安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line"></span><br><span class="line">yum -y install gcc gcc-c++ autoconf pcre pcre-devel make automake</span><br><span class="line"></span><br><span class="line">yum -y install wget httpd-tools vim</span><br><span class="line"></span><br><span class="line">cd /opt;mkdir app download logs work backup</span><br></pre></td></tr></table></figure><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><blockquote><p>IO多路复用epoll<br>模块化轻量化<br>CPU亲和（CPU核心worker进程绑定分配）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 几个物理CPU</span><br><span class="line">cat /proc/cpuinfo|grep &quot;physical id&quot; | sort | uniq | wc | -l</span><br><span class="line"></span><br><span class="line"># 几个核心</span><br><span class="line">cat /proc/cpuinfo|grep &quot;cpu cores&quot; | uniq</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="中间件架构"><a href="#中间件架构" class="headerlink" title="中间件架构"></a>中间件架构</h2><ol><li>静态资源web服务</li><li>代理服务</li><li>负载均衡调度器</li><li>动态缓存<blockquote><p>proxy_cache</p></blockquote></li></ol><p>switchysharp</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;默认安装&quot;&gt;&lt;a href=&quot;#默认安装&quot; class=&quot;headerlink&quot; title=&quot;默认安装&quot;&gt;&lt;/a&gt;默认安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>放松等待</title>
    <link href="http://blog.uiste.com/2019/20190630-1.html"/>
    <id>http://blog.uiste.com/2019/20190630-1.html</id>
    <published>2019-06-30T02:18:56.000Z</published>
    <updated>2019-07-25T03:28:37.500Z</updated>
    
    <content type="html"><![CDATA[<p>纽约时间比加州时间早三个小时，</p><p>New York is 3 hours ahead of California,</p><p>但加州时间并没有变慢。</p><p>but it does not make California slow.</p><p>有人22岁就毕业了，</p><p>Someone graduated at the age of 22,</p><p>但等了五年才找到好的工作！</p><p>but waited 5 years before securing a good job!</p><p>有人25岁就当上CEO，</p><p>Someone became a CEO at 25,</p><p>却在50岁去世。</p><p>and died at 50.</p><p>也有人迟到50岁才当上CEO，</p><p>While another became a CEO at 50,</p><p>然后活到90岁。</p><p>and lived to 90 years.</p><p>有人依然单身，</p><p>Someone is still single,</p><p>同时也有人已婚。</p><p>while someone else got married.</p><p>奥巴马55岁就退休，</p><p>Obama retires at 55,</p><p>川普70岁才开始当总统。</p><p>but Trump starts at 70.</p><p>世上每个人本来就有自己的发展时区。</p><p>Absolutely everyone in this world works based on their Time Zone.</p><p>身边有些人看似走在你前面，</p><p>People around you might seem to go ahead of you,</p><p>也有人看似走在你后面。</p><p>some might seem to be behind you.</p><p>但其实每个人在自己的时区有自己的步程。</p><p>But everyone is running their own RACE, in their own TIME.</p><p>不用嫉妒或嘲笑他们。</p><p>Don’t envy them or mock them.</p><p>他们都在自己的时区里，你也是！</p><p>They are in their TIME ZONE, and you are in yours!</p><p>生命就是等待正确的行动时机。</p><p>Life is about waiting for the right moment to act.</p><p>所以，放轻松。</p><p>So, RELAX.</p><p>你没有落后。</p><p>You’re not LATE.</p><p>你没有领先。</p><p>You’re not EARLY.</p><p>在命运为你安排的属于自己的时区里，一切都准时。</p><p>You are very much ON TIME, and in your TIME ZONE Destiny set up for you.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;纽约时间比加州时间早三个小时，&lt;/p&gt;
&lt;p&gt;New York is 3 hours ahead of California,&lt;/p&gt;
&lt;p&gt;但加州时间并没有变慢。&lt;/p&gt;
&lt;p&gt;but it does not make California slow.&lt;/p&gt;
&lt;p&gt;有人
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac 配置ssh 免密登录</title>
    <link href="http://blog.uiste.com/2018/20181102-3.html"/>
    <id>http://blog.uiste.com/2018/20181102-3.html</id>
    <published>2018-11-02T07:49:00.000Z</published>
    <updated>2018-11-02T07:58:06.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 配置ssh</span><br><span class="line">~ vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line">Host *</span><br><span class="line">    ServerAliveInterval 10</span><br><span class="line"></span><br><span class="line">Host Mweb1</span><br><span class="line">    HostName        服务器IP地址</span><br><span class="line">    Port            端口</span><br><span class="line">    User            用户名</span><br><span class="line">    IdentityFile    私钥地址</span><br><span class="line"></span><br><span class="line">Host Mweb2</span><br><span class="line">    HostName        服务器IP地址</span><br><span class="line">    Port            22</span><br><span class="line">    User            uiste</span><br><span class="line">    IdentityFile    ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"># 登录方式</span><br><span class="line">➜  ~ ssh Mweb1</span><br><span class="line">Last login: Fri Nov  2 08:15:51 2018 from 180.173.83.33</span><br><span class="line">[root@VM_0_6_centos ~]#</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac配置远程服务器隧道代理</title>
    <link href="http://blog.uiste.com/2018/20181102-2.html"/>
    <id>http://blog.uiste.com/2018/20181102-2.html</id>
    <published>2018-11-02T07:44:54.000Z</published>
    <updated>2018-11-03T00:13:03.743Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为安全原因远程服务器的数据库不允许本地直接访问，又没有开启访问IP白名单时，可以通过隧道代理访问。Windows系统通过xsheel可以设置隧道代理。Mac只需要运行如下命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 22  -i ~/.ssh/id_rsa -fNL 代理端口:代理IP:转发原端口 用户名@远程服务器IP</span><br><span class="line"></span><br><span class="line">ssh -p 22  -i ~/.ssh/id_rsa -fNL 3308:127.0.0.1:3306 root@118.xx.xxx.xx</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -p &#123;ssh_port&#125; -i &#123;rsa_file&#125; -fNL &#123;local_port&#125;:&#123;mysql_ip&#125;:&#123;mysql_port&#125; </span><br><span class="line">&#123;ssh_user&#125;@&#123;ssh_ip&#125;</span><br><span class="line">ssh -p 22  -i ./id_rsa_jump -fNL 33060:mysql_ip:3306 jump@jump_ip   # 实例</span><br></pre></td></tr></table></figure><blockquote><p>-p {ssh_port}: 指定跳板机器的ssh服务的端口<br>-i {rsa_file}:指定连接跳板机的ssh公钥，由跳板机的ssh服务端生成，如果不指定公钥或者公钥验证失败则会弹出密码进行登录。<br>-f:需进行ssh认证<br>-N:只进行端口转发，不执行命令<br>-L:指定连接服务的格式 [bind_address:]port:host:hostport<br>{local_port}：本地监听的端口<br>{mysql_ip}：转发到的mysql的ip或域名<br>{mysql_port}：转发到的mysql的端口<br>{ssh_port}：跳板机的<br>{ssh_user}：跳板机的ssh用户名(如果为rsa登录，则ras对应的用户名和ssh_user一致)<br>{ssh_ip}：跳板机的ip或域名<br>检查是否启动成功<br>netstat  -aon|findstr  “33060”  #存在对应的监听则启动成功 如果要关闭则kill<br>连接mysql<br>ip:127.0.0.1<br>port:33060</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;因为安全原因远程服务器的数据库不允许本地直接访问，又没有开启访问IP白名单时，可以通过隧道代理访问。Windows系统通过xsheel可以设置隧道代理。Mac只需要运行如下命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>truffle geth 启动Ethereum测试节点</title>
    <link href="http://blog.uiste.com/2018/20181102-1.html"/>
    <id>http://blog.uiste.com/2018/20181102-1.html</id>
    <published>2018-11-02T07:42:14.000Z</published>
    <updated>2018-11-02T07:58:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="truffle-框架使用"><a href="#truffle-框架使用" class="headerlink" title="truffle 框架使用"></a>truffle 框架使用</h1><p><strong> uiste@uiste:~$     testrpc </strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uiste@uiste:~/www/blockchain/test_truffle_2$     truffle unbox webpack</span><br><span class="line">uiste@uiste:~/www/blockchain/test_truffle_2$     truffle develop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Mon Apr  2 20:07:27 on ttys008</span><br><span class="line">uiste@uiste:~$     cd www/blockchain/test_truffle_2/</span><br><span class="line">uiste@uiste:~/www/blockchain/test_truffle_2$     npm run dev</span><br></pre></td></tr></table></figure></p><h1 id="geth-方式"><a href="#geth-方式" class="headerlink" title="geth 方式"></a>geth 方式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">`geth --datadir &quot;./Mychains/dev&quot; --identity &quot;mydev&quot; --rpccorsdomain &quot;*&quot; --networkid 99 console`</span><br><span class="line"></span><br><span class="line">uiste@uiste:~$     cd www/blockchain/test-geth</span><br><span class="line">uiste@uiste:~/www/blockchain/test-geth$     geth --datadir &quot;./Mychains/dev&quot; --identity &quot;mydev&quot; --rpc --rpcapi &quot;db,eth,net,web3,personal,web3&quot; --nodiscover --rpccorsdomain &quot;*&quot; --networkid 100 console</span><br><span class="line"></span><br><span class="line">uiste@uiste:/Applications$      /Applications/Mist.app/Contents/MacOS/Mist --rpc &quot;/Users/uiste/www/blockchain/test-geth/Mychains/dev/geth.ipc&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">geth --datadir &quot;./chain&quot; --identity &quot;mydev&quot; --rpc --rpcapi &quot;db,eth,net,web3,personal,web3&quot; --nodiscover --rpccorsdomain &quot;*&quot; --networkid 100 console 2&gt;&gt;eth_output.log</span><br><span class="line"></span><br><span class="line">geth --dev --rpc --rpccorsdomain &quot;*&quot; --rpcaddr &quot;0.0.0.0&quot; --rpcport &quot;8545&quot; --mine --rpcapi &quot;eth,txpool,web3&quot;</span><br><span class="line"></span><br><span class="line">geth --testnet --rpc --rpccorsdomain &quot;*&quot; --rpcaddr &quot;0.0.0.0&quot; --rpcport &quot;8545&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;truffle-框架使用&quot;&gt;&lt;a href=&quot;#truffle-框架使用&quot; class=&quot;headerlink&quot; title=&quot;truffle 框架使用&quot;&gt;&lt;/a&gt;truffle 框架使用&lt;/h1&gt;&lt;p&gt;&lt;strong&gt; uiste@uiste:~$     te
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【5】区块链-以太坊truffle 框架</title>
    <link href="http://blog.uiste.com/2018/20180511-5.html"/>
    <id>http://blog.uiste.com/2018/20180511-5.html</id>
    <published>2018-05-11T04:16:29.000Z</published>
    <updated>2019-04-02T04:36:45.010Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TestRPC安装"><a href="#TestRPC安装" class="headerlink" title="TestRPC安装"></a>TestRPC安装</h2><p>安装Ethereum客户端来支持JSON RPC API调用开发环境，推荐使用EthereumJS。<br>安装命令：</p><p><code>sudo npm install -g ethereumjs-testrpc</code></p><p>这里的安装如果无法下载，请参考上一篇博客中安装truffle中使用淘宝镜像的方法。此步安装遇到很多问题，也尝试了各种方法，比如gcc依赖的安装升级，Python的安装，npm的升级，git的配置，还有node版本是否影响。虽然最终把问题给解决了，但修改的地方太多具体什么原因导致安装过程中出现那么多问题，还有待大家去尝试分析。</p><p>在执行以上命令之后，只是把ethereumjs-testrpc安装在nodejs的以下路径：</p><p><code>/home/zhuzs/app/nodejs/node-v6.9.1/lib/node_modules/ethereumjs-testrpc</code></p><p>还行进行软连接的配置：</p><p><code>ln -s /home/zhuzs/app/nodejs/node-v6.9.1/lib/node_modules/ethereumjs-testrpc/bin/testrpc /usr/local/bin/testrpc</code></p><h2 id="truffle-安装"><a href="#truffle-安装" class="headerlink" title="truffle 安装"></a>truffle 安装</h2><p><code>npm install -g truffle</code></p><h2 id="truffle-使用"><a href="#truffle-使用" class="headerlink" title="truffle 使用"></a>truffle 使用</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">truffle init 初始化</span><br><span class="line">truffle  compile 编译</span><br><span class="line">truffle migrate 部署</span><br><span class="line">truffle serve 启动服务</span><br></pre></td></tr></table></figure><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ol><li><p>启动TestRPC<br><img src="//img.mukewang.com/5ac48d1e0001805713800986.png" alt="图片描述"></p></li><li><p>初始化项目<br><img src="//img.mukewang.com/5ac48d470001c60b12040374.png" alt="图片描述"></p></li><li><p>修改配置文件,编写简单的智能合约<br><img src="//img.mukewang.com/5ac48d52000118d719160480.png" alt="图片描述"></p></li></ol><blockquote><p>mac 默认读取的truffle.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  // See &lt;http://truffleframework.com/docs/advanced/configuration&gt;</span><br><span class="line">  // to customize your Truffle configuration!</span><br><span class="line">  networks: &#123;</span><br><span class="line">    development: &#123;</span><br><span class="line">      host: &quot;127.0.0.1&quot;,</span><br><span class="line">      port: 8545,</span><br><span class="line">      network_id: &quot;*&quot; // Match any network id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="//img.mukewang.com/5ac48d630001615723740600.png" alt="图片描述"><br>SimpleStorage.sol<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.4.0;  </span><br><span class="line">contract SimpleStorage &#123;  </span><br><span class="line">  </span><br><span class="line">   uint storedData;  </span><br><span class="line">  </span><br><span class="line">   function set(uint x) public &#123;   </span><br><span class="line">    storedData = x;  </span><br><span class="line">   &#125;  </span><br><span class="line">  </span><br><span class="line">   function get() constant public returns (uint) &#123;   </span><br><span class="line">      return storedData;  </span><br><span class="line">   &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2_deploy_contracts.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const SimpleStorage = artifacts.require(&quot;./SimpleStorage.sol&quot;)</span><br><span class="line"></span><br><span class="line">module.exports = function(deployer) &#123;</span><br><span class="line">    deployer.deploy(SimpleStorage);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><ol start="4"><li>编译(保证编译不报错)<br><img src="//img.mukewang.com/5ac48d780001e92110340482.png" alt="图片描述"><br>truffle migrate –reset  使用这个命令便可解决以上问题</li><li>部署<br><img src="//img.mukewang.com/5ac48d81000127fc20080396.png" alt="图片描述"><blockquote><p>报错问题无法解决</p></blockquote></li></ol><h2 id="换一种方案实现"><a href="#换一种方案实现" class="headerlink" title="换一种方案实现"></a>换一种方案实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir test   //重新建一个项目目录test</span><br><span class="line">truffle unbox webpack</span><br><span class="line">truffle develop   // 启动一个控制台</span><br><span class="line">&gt; compile       //编译</span><br><span class="line">&gt;migrate        //迁移合约    当然这两部也可以不在控制台下完成   可以用 truffle compile  和 truffle migrate 完成。</span><br><span class="line">npm run dev  //运行webpack服务器进行前端热重新加载（在开发控制台之外）。</span><br></pre></td></tr></table></figure><p><img src="//img.mukewang.com/5ac48da80001814512440476.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48db100013cb813840938.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48db80001e13e11660652.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48dc00001639914141032.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48dc800019ef024601256.png" alt="图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;TestRPC安装&quot;&gt;&lt;a href=&quot;#TestRPC安装&quot; class=&quot;headerlink&quot; title=&quot;TestRPC安装&quot;&gt;&lt;/a&gt;TestRPC安装&lt;/h2&gt;&lt;p&gt;安装Ethereum客户端来支持JSON RPC API调用开发环境，推荐使用Eth
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【4】区块链-以太坊web3.js</title>
    <link href="http://blog.uiste.com/2018/20180511-4.html"/>
    <id>http://blog.uiste.com/2018/20180511-4.html</id>
    <published>2018-05-11T04:15:29.000Z</published>
    <updated>2019-04-02T04:36:52.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><code>uiste@uiste:~/www/blockchain/test_web3js$     git clone https://github.com/ethereum/web3.js.git</code></p><p><img src="//img.mukewang.com/5ac48b790001e22212920416.png" alt="图片描述"></p><h2 id="运行node-app-js"><a href="#运行node-app-js" class="headerlink" title="运行node-app.js"></a>运行node-app.js</h2><p><img src="//img.mukewang.com/5ac48b970001028312480162.png" alt="图片描述"><br>获取主账号地址，与账户余额<br><img src="//img.mukewang.com/5ac48ba50001f44a19700496.png" alt="图片描述"></p><h2 id="下载轻钱包"><a href="#下载轻钱包" class="headerlink" title="下载轻钱包"></a>下载轻钱包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ConsenSys/eth-lightwallet.git</span><br><span class="line">cd eth-lightwallet</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p><img src="//img.mukewang.com/5ac48bb5000185f814721386.png" alt="图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;&lt;code&gt;uiste@uiste:~/www/blockchain/test_web3js$     git clone https://
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【3】区块链-以太坊代币合约</title>
    <link href="http://blog.uiste.com/2018/20180511-3.html"/>
    <id>http://blog.uiste.com/2018/20180511-3.html</id>
    <published>2018-05-11T04:14:29.000Z</published>
    <updated>2019-04-02T04:36:01.709Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编写智能合约"><a href="#编写智能合约" class="headerlink" title="编写智能合约"></a>编写智能合约</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.4.0;</span><br><span class="line"></span><br><span class="line">//创建一个基础合约，有些操作只能是当前合约的创建者才能操作</span><br><span class="line">contract owned&#123;</span><br><span class="line">    //声明一个用来接收合约创建者的状态变量</span><br><span class="line">    address public owner;</span><br><span class="line">    //构造函数，把当前交易的发送者（也就是合约的创建者）赋予owner变量</span><br><span class="line">    function owned() public &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //声明一个修改器，用于有些方法只有合约的创建者才能操作</span><br><span class="line">    modifier onlyOwner&#123;</span><br><span class="line">        if(msg.sender != owner)&#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            _;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //把该合约的拥有者转给其他人</span><br><span class="line">    function transferOwner(address newOwner) public onlyOwner&#123;</span><br><span class="line">        owner = newOwner;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract tokenCpc1 is owned &#123;</span><br><span class="line">    string public name ;//代币名字</span><br><span class="line">    string public symbol; //代币符号</span><br><span class="line">    uint8 public decimals = 0; //代币小数位</span><br><span class="line">    uint public totalSupply; //代币总量</span><br><span class="line">    </span><br><span class="line">    uint public sellPrice = 1 ether ; //设置代币的卖的价格等于一个以太币</span><br><span class="line">    uint public buyPrice = 1 ether ;//设置代币的买的价格等于一个以太币</span><br><span class="line">    </span><br><span class="line">    //用一个映射类型的变量，来记录所有账户的代币的余额</span><br><span class="line">    mapping(address =&gt; uint) public balanceOf;</span><br><span class="line">    //用一个映射类型的变量，来记录被冻结的账户</span><br><span class="line">    mapping(address=&gt;bool) public frozenAccount;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    event e(string _str);</span><br><span class="line">    //构造函数，初始化代币的变量和初始代币总量</span><br><span class="line">    function tokenCpc1(uint initialSupply,string _name , string _symbol, uint8 _decimals,address centralMinter) public payable&#123;</span><br><span class="line">        //手动指定代币的拥有者，如果不填，则默认为合约的部署者</span><br><span class="line">        if(centralMinter !=0)&#123;</span><br><span class="line">            owner = centralMinter;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        balanceOf[owner] = initialSupply;</span><br><span class="line">        name = _name;</span><br><span class="line">        symbol = _symbol;</span><br><span class="line">        decimals = _decimals;</span><br><span class="line">        totalSupply = initialSupply;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //发行代币，向指定的目标账户添加代币</span><br><span class="line">    function mintToken(address target,uint mintedAmount) public onlyOwner&#123;</span><br><span class="line">        //判断目标账户是否存在</span><br><span class="line">        if(target != 0)&#123;</span><br><span class="line">            //设置目标账户相应的代币余额</span><br><span class="line">            balanceOf[target] = mintedAmount;</span><br><span class="line">            //增加总量</span><br><span class="line">            totalSupply +=mintedAmount;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //实现账户的冻结和解冻</span><br><span class="line">    function freezeAccount(address target,bool _bool) public onlyOwner&#123;</span><br><span class="line">        if(target != 0)&#123;</span><br><span class="line">            frozenAccount[target] = _bool;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //实现账户间，代币的转移</span><br><span class="line">    function transfer(address _to, uint _value) public &#123;</span><br><span class="line">        //检测交易的发起者的账户是不是被冻结了</span><br><span class="line">        if(frozenAccount[msg.sender])&#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">        //检测交易发起者的账户的代币余额是否足够</span><br><span class="line">        if(balanceOf[msg.sender] &lt; _value)&#123;</span><br><span class="line">                revert();</span><br><span class="line">        &#125;</span><br><span class="line">        //检测溢出</span><br><span class="line">        if((balanceOf[_to] + _value) &lt;balanceOf[_to] )&#123;</span><br><span class="line">                    revert();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        //实现代币转移</span><br><span class="line">        balanceOf[msg.sender] -=_value;</span><br><span class="line">        balanceOf[_to] +=_value;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //设置代币的买卖价格</span><br><span class="line">    function setPrice(uint newSellPrice,uint newBuyPrice) public onlyOwner&#123;</span><br><span class="line">        sellPrice = newSellPrice;</span><br><span class="line">        buyPrice = newBuyPrice;</span><br><span class="line">    &#125;</span><br><span class="line">    //实现代币的卖操作</span><br><span class="line">    function sell(uint amount) public returns(uint revenue)&#123;</span><br><span class="line">        //检测交易的发起者的账户是不是被冻结了</span><br><span class="line">        if(frozenAccount[msg.sender])&#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">        //检测交易发起者的账户的代币余额是否足够</span><br><span class="line">        if(balanceOf[msg.sender] &lt; amount)&#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">        //把相应数量的代币给合约的拥有者</span><br><span class="line">        balanceOf[owner] +=amount ;</span><br><span class="line">        //卖家的账户减去相应的余额</span><br><span class="line">        balanceOf[msg.sender] -=amount;</span><br><span class="line">        //计算对应的以太币的价值</span><br><span class="line">        revenue = amount * sellPrice;</span><br><span class="line">        //向卖家的账户发送对应数量的以太币</span><br><span class="line">        if(msg.sender.send(revenue))&#123;</span><br><span class="line">            return revenue;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            //如果以太币发送失败，则终止程序，并且恢复状态变量</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //实现买操作</span><br><span class="line">    function buy() public payable returns(uint amount) &#123;</span><br><span class="line">        //检测买家是不是大于0 </span><br><span class="line">        if(buyPrice &lt;= 0)&#123;</span><br><span class="line">            //如果不是，则终止</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">        //根据用户发送的以太币的数量和代币的买价，计算出代币的数量</span><br><span class="line">        amount = msg.value / buyPrice;</span><br><span class="line">        //检测合约的拥有者是否有足够多的代币</span><br><span class="line">        if(balanceOf[owner] &lt; amount)&#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">        //向合约的拥有者转移以太币</span><br><span class="line">        if(!owner.send(msg.value))&#123;</span><br><span class="line">            //如果失败，则终止</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">        //从拥有者的账户上减去相应的代币</span><br><span class="line">        balanceOf[owner] -=amount ;</span><br><span class="line">        //买家的账户增加相应的余额</span><br><span class="line">        balanceOf[msg.sender] +=amount;</span><br><span class="line">        </span><br><span class="line">        return amount;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="部署合约"><a href="#部署合约" class="headerlink" title="部署合约"></a>部署合约</h2><p><img src="//img.mukewang.com/5ac48a8600015feb21181220.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48a9400018a6b22201294.png" alt="图片描述"></p><h2 id="开启挖矿"><a href="#开启挖矿" class="headerlink" title="开启挖矿"></a>开启挖矿</h2><p><img src="//img.mukewang.com/5ac48aa400018ec415500486.png" alt="图片描述"></p><h2 id="添加代币"><a href="#添加代币" class="headerlink" title="添加代币"></a>添加代币</h2><p><img src="//img.mukewang.com/5ac48ab50001c01c23061122.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48ac80001da2c22581274.png" alt="图片描述"></p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p><img src="//img.mukewang.com/5ac48ad60001bbf322461104.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48adf00012d0422780956.png" alt="图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;编写智能合约&quot;&gt;&lt;a href=&quot;#编写智能合约&quot; class=&quot;headerlink&quot; title=&quot;编写智能合约&quot;&gt;&lt;/a&gt;编写智能合约&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【2】区块链-以太坊智能合约</title>
    <link href="http://blog.uiste.com/2018/20180511-2.html"/>
    <id>http://blog.uiste.com/2018/20180511-2.html</id>
    <published>2018-05-11T04:13:29.000Z</published>
    <updated>2019-04-02T04:35:54.821Z</updated>
    
    <content type="html"><![CDATA[<h1 id="以太坊智能合约实战"><a href="#以太坊智能合约实战" class="headerlink" title="以太坊智能合约实战"></a>以太坊智能合约实战</h1><h2 id="启动Remix-IDE工具"><a href="#启动Remix-IDE工具" class="headerlink" title="启动Remix IDE工具"></a>启动Remix IDE工具</h2><p><img src="//img.mukewang.com/5ac488130001914c25261476.png" alt="图片描述"></p><h2 id="设置IDE本地文件共享"><a href="#设置IDE本地文件共享" class="headerlink" title="设置IDE本地文件共享"></a>设置IDE本地文件共享</h2><p><img src="//img.mukewang.com/5ac4883300013f9920320678.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac4883b00015ee317440998.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac48847000183f712380512.png" alt="图片描述"></p><blockquote><p>参考连接</p><ol><li><a href="https://remix.readthedocs.io/en/latest/tutorial_remixd_filesystem.html" target="_blank" rel="noopener">https://remix.readthedocs.io/en/latest/tutorial_remixd_filesystem.html</a></li><li><a href="https://github.com/ethereum/remixd" target="_blank" rel="noopener">https://github.com/ethereum/remixd</a></li></ol></blockquote><h2 id="以太坊智能合约demo"><a href="#以太坊智能合约demo" class="headerlink" title="以太坊智能合约demo"></a>以太坊智能合约demo</h2><h3 id="新建账户的两种方案"><a href="#新建账户的两种方案" class="headerlink" title="新建账户的两种方案"></a>新建账户的两种方案</h3><p><img src="//img.mukewang.com/5ac488790001560a19400618.png" alt="图片描述"></p><h3 id="新建合约"><a href="#新建合约" class="headerlink" title="新建合约"></a>新建合约</h3><p><img src="//img.mukewang.com/5ac488870001c5ea20100656.png" alt="图片描述"></p><h3 id="编写合约代码"><a href="#编写合约代码" class="headerlink" title="编写合约代码"></a>编写合约代码</h3><p><img src="//img.mukewang.com/5ac488a500016b1020721012.png" alt="图片描述"></p><h3 id="合约部署"><a href="#合约部署" class="headerlink" title="合约部署"></a>合约部署</h3><p><img src="//img.mukewang.com/5ac488b3000105f620400848.png" alt="图片描述"></p><p><img src="//img.mukewang.com/5ac488c3000133bc16941388.png" alt="图片描述"></p><h3 id="开启挖矿"><a href="#开启挖矿" class="headerlink" title="开启挖矿"></a>开启挖矿</h3><p><img src="//img.mukewang.com/5ac488cc0001dc3c15440492.png" alt="图片描述"></p><h3 id="合约打包成功"><a href="#合约打包成功" class="headerlink" title="合约打包成功"></a>合约打包成功</h3><p><img src="//img.mukewang.com/5ac488d8000140b019701052.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac488f200011c8520500486.png" alt="图片描述"></p><h3 id="查看部署好的合约"><a href="#查看部署好的合约" class="headerlink" title="查看部署好的合约"></a>查看部署好的合约</h3><p><img src="//img.mukewang.com/5ac489010001b91422461240.png" alt="图片描述"></p><h3 id="执行合约"><a href="#执行合约" class="headerlink" title="执行合约"></a>执行合约</h3><ol><li><p>给主账户设置100000块钱<br><img src="//img.mukewang.com/5ac489170001f40622521270.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac4891f0001489e11321364.png" alt="图片描述"></p></li><li><p>查看合约执行状态<br><img src="//img.mukewang.com/5ac4892800014e1c20480618.png" alt="图片描述"><br><img src="//img.mukewang.com/5ac489370001278513640844.png" alt="图片描述"></p></li></ol><p><strong> 这里本来是100000多执行了一次1000000导致有1100000 </strong></p><ol start="3"><li>合约执行<br><img src="//img.mukewang.com/5ac4895700016b1121161130.png" alt="图片描述"></li></ol><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><h3 id="solidity-文档"><a href="#solidity-文档" class="headerlink" title="solidity 文档"></a>solidity 文档</h3><p><a href="http://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html" target="_blank" rel="noopener">http://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html</a></p><p><a href="http://www.tryblockchain.org/" target="_blank" rel="noopener">http://www.tryblockchain.org/</a></p><h3 id="Web3-js-文档"><a href="#Web3-js-文档" class="headerlink" title="Web3 js 文档"></a>Web3 js 文档</h3><p><a href="http://web3.tryblockchain.org/" target="_blank" rel="noopener">http://web3.tryblockchain.org/</a></p><h3 id="Truffle-文档"><a href="#Truffle-文档" class="headerlink" title="Truffle 文档"></a>Truffle 文档</h3><p><a href="http://truffle.tryblockchain.org/" target="_blank" rel="noopener">http://truffle.tryblockchain.org/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;以太坊智能合约实战&quot;&gt;&lt;a href=&quot;#以太坊智能合约实战&quot; class=&quot;headerlink&quot; title=&quot;以太坊智能合约实战&quot;&gt;&lt;/a&gt;以太坊智能合约实战&lt;/h1&gt;&lt;h2 id=&quot;启动Remix-IDE工具&quot;&gt;&lt;a href=&quot;#启动Remix-IDE工
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【1】区块链-以太坊搭建私有网络</title>
    <link href="http://blog.uiste.com/2018/20180511-1.html"/>
    <id>http://blog.uiste.com/2018/20180511-1.html</id>
    <published>2018-05-11T04:12:29.000Z</published>
    <updated>2019-04-02T04:29:04.291Z</updated>
    
    <content type="html"><![CDATA[<h1 id="以太坊搭建私有网络实战"><a href="#以太坊搭建私有网络实战" class="headerlink" title="以太坊搭建私有网络实战"></a>以太坊搭建私有网络实战</h1><h2 id="基本环境安装"><a href="#基本环境安装" class="headerlink" title="基本环境安装"></a>基本环境安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 安装nodejs</span><br><span class="line">2. brew tap ethereum/ethereum</span><br><span class="line">3. brew install ethereum</span><br><span class="line">4. Ethereum Wallet and Mist Beta 0.10.0</span><br><span class="line">https://github.com/ethereum/mist/releases/</span><br></pre></td></tr></table></figure><h2 id="配置创世区块文件"><a href="#配置创世区块文件" class="headerlink" title="配置创世区块文件"></a>配置创世区块文件</h2><ol><li>文件名：CustomGenesis.json<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;nonce&quot;: &quot;0x0000000000000042&quot;,     </span><br><span class="line">    &quot;timestamp&quot;: &quot;0x00&quot;,</span><br><span class="line">    &quot;parentHash&quot;: &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;,</span><br><span class="line">    &quot;extraData&quot;: &quot;0x00&quot;,     </span><br><span class="line">    &quot;gasLimit&quot;: &quot;0x8000000&quot;,     </span><br><span class="line">    &quot;difficulty&quot;: &quot;0x400&quot;,</span><br><span class="line">    &quot;mixhash&quot;: &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;,</span><br><span class="line">    &quot;coinbase&quot;: &quot;0x3333333333333333333333333333333333333333&quot;,     </span><br><span class="line">    &quot;alloc&quot;: &#123;</span><br><span class="line">     &#125;,</span><br><span class="line">     &quot;config&quot;: &#123;</span><br><span class="line">        &quot;chainId&quot;: 15,</span><br><span class="line">        &quot;homesteadBlock&quot;: 0,</span><br><span class="line">        &quot;eip155Block&quot;: 0,</span><br><span class="line">        &quot;eip158Block&quot;: 0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="//img.mukewang.com/5ac4846e000136c013360350.png" alt="图片描述"></p><h2 id="初始化创世区块"><a href="#初始化创世区块" class="headerlink" title="初始化创世区块"></a>初始化创世区块</h2><p><code>geth --identity &quot;mydev&quot; --rpc --rpccorsdomain &quot;*&quot; --datadir &quot;./Mychains/dev&quot; --rpcapi &quot;db,eth,net,web3&quot; init &quot;./CustomGenesis.json&quot;</code></p><p><img src="//img.mukewang.com/5ac4848a000100b316940468.png" alt="图片描述"></p><h2 id="开启私有网络"><a href="#开启私有网络" class="headerlink" title="开启私有网络"></a>开启私有网络</h2><ol><li>只开启rpc<br><code>geth --datadir &quot;./Mychains/dev&quot; --identity &quot;mydev&quot; --rpccorsdomain &quot;*&quot; --networkid 99 console</code><br><img src="//img.mukewang.com/5ac484b00001926c22840746.png" alt="图片描述"></li><li>开启rpc和http<br><code>geth --datadir &quot;./Mychains/dev&quot; --identity &quot;mydev&quot; --rpc --rpcapi &quot;db,eth,net,web3,personal,web3&quot; --nodiscover --rpccorsdomain &quot;*&quot; --networkid 100 console</code><br><img src="//img.mukewang.com/5ac484bb0001f09a15440802.png" alt="图片描述"></li></ol><h1 id="创建账户"><a href="#创建账户" class="headerlink" title="创建账户"></a>创建账户</h1><p><img src="//img.mukewang.com/5ac484d10001e0a816580202.png" alt="图片描述"></p><h2 id="IPC连接连接，并开启挖矿（新开一个客户端）"><a href="#IPC连接连接，并开启挖矿（新开一个客户端）" class="headerlink" title="IPC连接连接，并开启挖矿（新开一个客户端）"></a>IPC连接连接，并开启挖矿（新开一个客户端）</h2><p><code>geth attach /Users/uiste/www/blockchain/test-geth/Mychains/dev/geth.ipc</code></p><p><img src="//img.mukewang.com/5ac4851500013f7016480820.png" alt="图片描述"></p><blockquote><p>如果是Web应用的时候，就使用<a href="http://127.0.0.8545" target="_blank" rel="noopener">http://127.0.0.8545</a> 地址就是连接</p></blockquote><h2 id="开启mist浏览器"><a href="#开启mist浏览器" class="headerlink" title="开启mist浏览器"></a>开启mist浏览器</h2><p>Mac遇到启动mist失败</p><p><img src="//img.mukewang.com/5ac4852f000122ee09300898.png" alt="图片描述"><br>解决方案：</p><ol><li><p>通过命令行方式启动让Ethereum Wallet，添加参数让他和刚起的私有链同用一个ipc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uiste@uiste:~/www/blockchain/test-geth/Mychains/dev$     cd /Applications/</span><br><span class="line">uiste@uiste:/Applications$     ./Ethereum\ Wallet.app/Contents/MacOS/Ethereum\ Wallet --rpc &quot;/Users/uiste/www/blockchain/test-geth/Mychains/dev/geth.ipc&quot;</span><br></pre></td></tr></table></figure></li><li><p>通过命令行方式启动Mist，添加参数让他和刚起的私有链同用一个ipc。<br><img src="//img.mukewang.com/5ac4855b0001651f14140316.png" alt="图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uiste@uiste:/Applications$      Mist.app/Contents/MacOS/Mist --rpc &quot;/Users/uiste/www/blockchain/test-geth/Mychains/dev/geth.ipc&quot;</span><br></pre></td></tr></table></figure></li></ol><p>启动Mist后的界面如下：</p><p><img src="//img.mukewang.com/5ac4856400013fe024441426.png" alt="图片描述"><br>停止挖矿，命令行查看账户余额<br><img src="//img.mukewang.com/5ac4857f0001cda615500390.png" alt="图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;以太坊搭建私有网络实战&quot;&gt;&lt;a href=&quot;#以太坊搭建私有网络实战&quot; class=&quot;headerlink&quot; title=&quot;以太坊搭建私有网络实战&quot;&gt;&lt;/a&gt;以太坊搭建私有网络实战&lt;/h1&gt;&lt;h2 id=&quot;基本环境安装&quot;&gt;&lt;a href=&quot;#基本环境安装&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>大型网站架构设计</title>
    <link href="http://blog.uiste.com/2018/20180405-1.html"/>
    <id>http://blog.uiste.com/2018/20180405-1.html</id>
    <published>2018-04-05T04:13:29.000Z</published>
    <updated>2019-04-13T05:08:22.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大型网站的特点"><a href="#大型网站的特点" class="headerlink" title="大型网站的特点"></a>大型网站的特点</h1><ul><li>海量数据： 淘宝有几十亿商品</li><li>高并发：    日均PV几十亿</li><li>高可用：    系统<code>7*24</code>不间断</li><li>功能多、需求多、更新快</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;大型网站的特点&quot;&gt;&lt;a href=&quot;#大型网站的特点&quot; class=&quot;headerlink&quot; title=&quot;大型网站的特点&quot;&gt;&lt;/a&gt;大型网站的特点&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;海量数据： 淘宝有几十亿商品&lt;/li&gt;
&lt;li&gt;高并发：    日均PV几十亿&lt;/li&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql存储过程</title>
    <link href="http://blog.uiste.com/2018/20180404-1.html"/>
    <id>http://blog.uiste.com/2018/20180404-1.html</id>
    <published>2018-04-04T04:13:29.000Z</published>
    <updated>2019-04-13T05:08:01.302Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储过程自动分表"><a href="#存储过程自动分表" class="headerlink" title="存储过程自动分表"></a>存储过程自动分表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 参照表</span><br><span class="line">CREATE TABLE `pc_pay_result_20170420` (</span><br><span class="line">  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `order_id` varchar(32) NOT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&apos;支付结果&apos;;</span><br><span class="line"></span><br><span class="line"># 存储过程</span><br><span class="line">DROP PROCEDURE IF EXISTS `proc_month_daily_create_tables`;</span><br><span class="line">DELIMITER $$</span><br><span class="line">CREATE PROCEDURE `proc_month_daily_create_tables`() </span><br><span class="line">begin  </span><br><span class="line">set @current_20_tablesql=(select concat(&apos;es.pc_pay_result_&apos;,date_format(curdate(),&apos;%Y%m&apos;),&apos;20&apos;));</span><br><span class="line">set @create_tablesql_00=(select concat(&apos;CREATE TABLE IF NOT EXISTS es.pc_pay_result_&apos;,date_format(date_add(curdate(),interval 1 month),&apos;%Y%m&apos;),&apos;00 like &apos;,&apos;es.pc_pay_result_&apos;,date_format(curdate(),&apos;%Y%m&apos;),&apos;20;&apos;));</span><br><span class="line">set @create_tablesql_10=(select concat(&apos;CREATE TABLE IF NOT EXISTS es.pc_pay_result_&apos;,date_format(date_add(curdate(),interval 1 month),&apos;%Y%m&apos;),&apos;10 like &apos;,&apos;es.pc_pay_result_&apos;,date_format(curdate(),&apos;%Y%m&apos;),&apos;20;&apos;));</span><br><span class="line">set @create_tablesql_20=(select concat(&apos;CREATE TABLE IF NOT EXISTS es.pc_pay_result_&apos;,date_format(date_add(curdate(),interval 1 month),&apos;%Y%m&apos;),&apos;20 like &apos;,&apos;es.pc_pay_result_&apos;,date_format(curdate(),&apos;%Y%m&apos;),&apos;20;&apos;));</span><br><span class="line"></span><br><span class="line">PREPARE create_tablesql_00 FROM @create_tablesql_00;     </span><br><span class="line">EXECUTE create_tablesql_00;  </span><br><span class="line">PREPARE create_tablesql_10 FROM @create_tablesql_10;     </span><br><span class="line">EXECUTE create_tablesql_10;  </span><br><span class="line">PREPARE create_tablesql_20 FROM @create_tablesql_20;     </span><br><span class="line">EXECUTE create_tablesql_20;  </span><br><span class="line"></span><br><span class="line"> END </span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"># 自动创建事件</span><br><span class="line">CREATE DEFINER=`root`@`localhost` EVENT `存储过程建表事件` ON SCHEDULE EVERY &apos;0:1&apos; MINUTE_SECOND STARTS &apos;2019-04-07 15:38:29&apos; ON COMPLETION NOT PRESERVE ENABLE COMMENT &apos;存储过程建表&apos; DO begin</span><br><span class="line">/**event body**/</span><br><span class="line">CALL proc_month_daily_create_tables();</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">CREATE DEFINER=`root`@`localhost` EVENT `存储过程建表事件` ON SCHEDULE EVERY &apos;0 1&apos; DAY_HOUR STARTS &apos;2019-04-08 15:38:29&apos; ON COMPLETION NOT PRESERVE ENABLE COMMENT &apos;存储过程建表&apos; DO begin</span><br><span class="line">/**event body**/</span><br><span class="line">CALL proc_month_daily_create_tables();</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><img src="http://resoure.uiste.com/phcntech_dev190407154844_mysql.png" alt="存储过程事件"></p><h1 id="创建自定义函数"><a href="#创建自定义函数" class="headerlink" title="创建自定义函数"></a>创建自定义函数</h1><p><img src="http://resoure.uiste.com/phcntech_dev190407162402_funcion.png" alt="funciton"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;存储过程自动分表&quot;&gt;&lt;a href=&quot;#存储过程自动分表&quot; class=&quot;headerlink&quot; title=&quot;存储过程自动分表&quot;&gt;&lt;/a&gt;存储过程自动分表&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://blog.uiste.com/2018/20180403-1.html"/>
    <id>http://blog.uiste.com/2018/20180403-1.html</id>
    <published>2018-04-03T04:13:29.000Z</published>
    <updated>2019-04-02T10:11:05.881Z</updated>
    
    <content type="html"><![CDATA[<p>精神指南：找到容易变化的地方，独立出来</p><h1 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h1><p>用不同的类 + 相同的方法 实现不同的策略行为</p><h1 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h1><p>被观察者绑定多个观察者的类 指定事件完成时，循环触发不同观察者的相同方法<br>PHP SPL 中 SplObserveer SplSubject SplObjectStorage</p><h1 id="装饰模式"><a href="#装饰模式" class="headerlink" title="装饰模式"></a>装饰模式</h1><h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><h1 id="适配器模式"><a href="#适配器模式" class="headerlink" title="适配器模式"></a>适配器模式</h1><h1 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;精神指南：找到容易变化的地方，独立出来&lt;/p&gt;
&lt;h1 id=&quot;策略模式&quot;&gt;&lt;a href=&quot;#策略模式&quot; class=&quot;headerlink&quot; title=&quot;策略模式&quot;&gt;&lt;/a&gt;策略模式&lt;/h1&gt;&lt;p&gt;用不同的类 + 相同的方法 实现不同的策略行为&lt;/p&gt;
&lt;h1 id=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql高级-存储引擎、驱动、索引、优化</title>
    <link href="http://blog.uiste.com/2018/20180402-3.html"/>
    <id>http://blog.uiste.com/2018/20180402-3.html</id>
    <published>2018-04-02T04:13:29.000Z</published>
    <updated>2019-04-02T09:35:30.579Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL5.1版本前默认存储引擎是myisam<br>MySQL5.5版本开始默认存储引擎是innodb</p><h1 id="字段类型"><a href="#字段类型" class="headerlink" title="字段类型"></a>字段类型</h1><h1 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h1><ul><li>myisam 和 memory 存储引擎采用的是表级锁</li><li>BDB存储引擎采用的是页面锁，但也支持表级锁</li><li><p>innodb 存储引擎既支持行锁也支持表锁，默认采用行锁</p></li><li><p>表级锁：开销小，加锁快，不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并发度最低</p></li><li>行级锁：开销大，加锁慢，会出现死锁，锁定粒度小，发生锁冲突的概率最低，并发度也最高</li><li>页面锁：介于上述二者之间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">myisam 表锁争用情况</span><br><span class="line">&gt; show status like &apos;table_lock%&apos;;</span><br><span class="line">table_lock_waited  值高有着叫严重的表锁争用情况</span><br><span class="line">table_lock_immediate</span><br><span class="line"></span><br><span class="line">table_lock_immediate/table_lock_waited &gt; 5000 争用情况正常</span><br></pre></td></tr></table></figure><h2 id="myisam-锁机制"><a href="#myisam-锁机制" class="headerlink" title="myisam 锁机制"></a>myisam 锁机制</h2><p>表共享读锁（不会阻塞其它进程对同一表的读请求，但会阻塞同一表的写请求）<br>表独占写锁（会阻塞其它进程对同一表的读写操作）</p><blockquote><p>并发插入<br>concurrent_instert<br>0:不允许并发插入<br>1:有空洞不允许并发插入，无空洞允许<br>2:都允许</p></blockquote><h2 id="innodb"><a href="#innodb" class="headerlink" title="innodb"></a>innodb</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; show status like &apos;innodb_row_lock%&apos;;</span><br><span class="line">innodb_row_lock_current_waits:</span><br><span class="line">innodb_row_lock_time</span><br><span class="line">innodb_row_lock_time_avg</span><br><span class="line">innodb_row_lock_time_max</span><br><span class="line">innodb_row_lock_waits</span><br></pre></td></tr></table></figure><ul><li>行锁不影响读操作，只影响写操作。同时如果更新语句条件没有加索引，会锁定整个表，但还是不影响读操作</li></ul><h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><h2 id="innodb-事务隔离级别"><a href="#innodb-事务隔离级别" class="headerlink" title="innodb 事务隔离级别"></a>innodb 事务隔离级别</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* read uncommitted 非提交读（会带来涨读）</span><br><span class="line">* read committed 提交读 </span><br><span class="line">* repeatable read 可重复读 （会出现幻读）</span><br><span class="line">* serializable 序列化 （会加锁，让数据不可变）</span><br><span class="line"></span><br><span class="line">查看隔离级别</span><br><span class="line">select @@tx_isolation查看当前会话隔离级别</span><br><span class="line">select @@global.tx_isolation 查看系统隔离级别</span><br><span class="line"></span><br><span class="line">设置隔离级别</span><br><span class="line">set session transaction isolation level xxx 设置档期会话隔离级别</span><br><span class="line">set global transaction isolation level xxx  设置系统全局隔离级别</span><br></pre></td></tr></table></figure><h1 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h1><h2 id="php5-3之前定的渠道是libmysql-dll或so-之后是mysqlnd"><a href="#php5-3之前定的渠道是libmysql-dll或so-之后是mysqlnd" class="headerlink" title="php5.3之前定的渠道是libmysql.dll或so 之后是mysqlnd"></a>php5.3之前定的渠道是libmysql.dll或so 之后是mysqlnd</h2><h2 id="驱动API"><a href="#驱动API" class="headerlink" title="驱动API"></a>驱动API</h2><ul><li>msyql （mysql_real_escape_string($name)）转移特深字符，用于msyql_queue() 安全查询</li><li>mysqli 新增：面向对象接口、绑定语句支持（prepare、bind_param）、多语句支持、事务支持等</li><li>pdo_mysql 特点：多数据库统一支持</li></ul><h1 id="索引和全文检索技术"><a href="#索引和全文检索技术" class="headerlink" title="索引和全文检索技术"></a>索引和全文检索技术</h1><ol><li><p>普通索引</p><blockquote><p>如果没有唯一性要求，可以选择普通索引</p></blockquote></li><li><p>唯一索引</p><blockquote><p>如果列上有唯一性要求，可以选择唯一索引</p></blockquote></li><li><p>全文索引</p><blockquote><p>如果需要模糊搜索，可以选择全文索引</p></blockquote></li><li><p>组合索引</p><blockquote><p>如果有多个条件一起查询，可以选择组合索引<br>注意最左原则</p></blockquote></li></ol><ul><li>索引的实现方式<blockquote><p>B+ 树 、聚簇索引 、 非聚簇索引 对中文支持不友好</p></blockquote></li></ul><h1 id="sql优化"><a href="#sql优化" class="headerlink" title="sql优化"></a>sql优化</h1><h2 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. from 子句对其后面的多个表进行笛卡尔积，产生的虚拟表VT1</span><br><span class="line">2. on 对VT1 数据过滤 得到 VT2</span><br><span class="line">3. 将未符合调价的保留表中数据添加到 VT2 中 得到 VT3</span><br><span class="line">4. where 子句对 VT3 过滤 得到 VT4</span><br><span class="line">5. group 对 VT4 得到 VT5</span><br><span class="line">6. cube|roolup 子句进行操作得到 VT6</span><br><span class="line">7. having 对VT6数据进行Having 得到VT7</span><br><span class="line">8. select 从 VT7 中选择要获取的字段 得到 VT8</span><br><span class="line">9. distinct 去重 得到 VT9</span><br><span class="line">10. order by 对VT9 结果进行排序后，形成 VT10</span><br><span class="line">11. limit 从 VT10 中取出指定的数据，形成 VT11 返回给用户</span><br></pre></td></tr></table></figure><h2 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN 输出格式</span><br><span class="line">EXPLAIN 命令的输出内容大致如下:</span><br><span class="line"></span><br><span class="line">mysql&gt; explain select * from user_info where id = 2\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        table: user_info</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: const</span><br><span class="line">possible_keys: PRIMARY</span><br><span class="line">          key: PRIMARY</span><br><span class="line">      key_len: 8</span><br><span class="line">          ref: const</span><br><span class="line">         rows: 1</span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: NULL</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br><span class="line">各列的含义如下:</span><br><span class="line"></span><br><span class="line">id: SELECT 查询的标识符. 每个 SELECT 都会自动分配一个唯一的标识符.</span><br><span class="line"></span><br><span class="line">select_type: SELECT 查询的类型.</span><br><span class="line"></span><br><span class="line">table: 查询的是哪个表</span><br><span class="line"></span><br><span class="line">partitions: 匹配的分区</span><br><span class="line"></span><br><span class="line">type: join 类型</span><br><span class="line"></span><br><span class="line">possible_keys: 此次查询中可能选用的索引</span><br><span class="line"></span><br><span class="line">key: 此次查询中确切使用到的索引.</span><br><span class="line"></span><br><span class="line">ref: 哪个字段或常数与 key 一起被使用</span><br><span class="line"></span><br><span class="line">rows: 显示此查询一共扫描了多少行. 这个是一个估计值.</span><br><span class="line"></span><br><span class="line">filtered: 表示此查询条件所过滤的数据的百分比</span><br><span class="line"></span><br><span class="line">extra: 额外的信息</span><br></pre></td></tr></table></figure><h2 id="分表"><a href="#分表" class="headerlink" title="分表"></a>分表</h2><h2 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MySQL5.1版本前默认存储引擎是myisam&lt;br&gt;MySQL5.5版本开始默认存储引擎是innodb&lt;/p&gt;
&lt;h1 id=&quot;字段类型&quot;&gt;&lt;a href=&quot;#字段类型&quot; class=&quot;headerlink&quot; title=&quot;字段类型&quot;&gt;&lt;/a&gt;字段类型&lt;/h1&gt;&lt;h1 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql高级-体系结构</title>
    <link href="http://blog.uiste.com/2018/20180402-2.html"/>
    <id>http://blog.uiste.com/2018/20180402-2.html</id>
    <published>2018-04-02T04:12:29.000Z</published>
    <updated>2019-04-02T04:50:12.367Z</updated>
    
    <content type="html"><![CDATA[<p>Mysql是由SQL接口，解析器，优化器，缓存，存储引擎组成的。</p><p><img src="http://resoure.uiste.com/phcntech_dev190402124853_mysql体系结构.png" alt="MySQL体系结构"></p><p>Connectors</p><p>指的是不同语言中与SQL的交互</p><p>Management Serveices &amp; Utilities</p><p>系统管理和控制工具</p><p>Connection Pool</p><p>连接池</p><p>管理缓冲用户连接，线程处理等需要缓存的需求。</p><p>SQL Interface: SQL接口</p><p>接受用户的SQL命令，并且返回用户需要查询的结果。比如select from就是调用SQL Interface。</p><p>Parser: 解析器。</p><p>SQL命令传递到解析器的时候会被解析器验证和解析。解析器是由Lex和YACC实现的，是一个很长的脚本。</p><p>主要功能：</p><p>a . 将SQL语句分解成数据结构，并将这个结构传递到后续步骤，以后SQL语句的传递和处理就是基于这个结构的 。</p><p>b. 如果在分解构成中遇到错误，那么就说明这个sql语句是不合理的。</p><p>Optimizer: 查询优化器</p><p>SQL语句在查询之前会使用查询优化器对查询进行优化。他使用的是“选取-投影-联接”策略进行查询。</p><p>用一个例子就可以理解： select uid,name from user where gender = 1;这个select 查询先根据where语句进行选取，而不是先将表全部查询出来以后再进行gender过滤。<br>这个select查询先根据uid和name进行属性投影，而不是将属性全部取出以后再进行过滤。<br>将这两个查询条件联接起来生成最终查询结果。</p><p>Cache和Buffer： 查询缓存</p><p>如果查询缓存有命中的查询结果，查询语句就可以直接去查询缓存中取数据。</p><p>这个缓存机制是由一系列小缓存组成的。比如表缓存，记录缓存，key缓存，权限缓存等。</p><p>Engine ：存储引擎</p><p>存储引擎是MySql中具体的与文件打交道的子系统。也是Mysql最具有特色的一个地方。</p><p>Mysql的存储引擎是插件式的。它根据MySql AB公司提供的文件访问层的一个抽象接口来定制一种文件访问机制（这种访问机制就叫存储引擎）。</p><p>现在有很多种存储引擎，各个存储引擎的优势各不一样，最常用的MyISAM,InnoDB,BDB。</p><p>默认下MySql5.6是使用MyISAM引擎，它查询速度快，有较好的索引优化和数据压缩技术。但是它不支持事务。</p><p>InnoDB支持事务，并且提供行级的锁定，应用也相当广泛。</p><p>Mysql也支持自己定制存储引擎，甚至一个库中不同的表使用不同的存储引擎，这些都是允许的。</p><p>物理文件<br>物理文件包括：redolog、undolog、binlog（复制时还有relaylog）、errorlog、querylog、slowlog、data、index</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mysql是由SQL接口，解析器，优化器，缓存，存储引擎组成的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://resoure.uiste.com/phcntech_dev190402124853_mysql体系结构.png&quot; alt=&quot;MySQL体系结构&quot;&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
